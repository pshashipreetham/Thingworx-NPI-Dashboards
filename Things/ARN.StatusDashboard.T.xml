<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="4"
 universal="">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         inheritedValueStream=""
         name="ARN.StatusDashboard.T"
         projectName="Arorian"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="ARN.NameValue1.DS"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="allProjects"
                     ordinal="8"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="ARN.ProjectDetails1.DS"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="allProjectsDetails"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="dummyInfotable"
                     ordinal="4"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="dummyJson"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="ARN.ProjectDeepdive.DS"
                     aspect.isIndexed="false"
                     aspect.isPersistent="false"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="projectsPhaseCount"
                     ordinal="9"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="ARN.NameValue.DS"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="ProjectTypeCount"
                     ordinal="7"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="ARN.ProjectCount.DS"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="runningProjects"
                     ordinal="6"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="scheduledData"
                     ordinal="5"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="addProjectDetailsToProp">
                        <ResultType
                         aspect.dataShape="ARN.ProjectDetails1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getActiveProjectsCount">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getBottleNecks">
                        <ResultType
                         aspect.dataShape="ARN.ScheduleDetailsLevel1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="currentPhase"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="scheduledData"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getCurrentPhase">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.dataShape="ARN.ScheduleDetailsLevel1.DS"
                             baseType="INFOTABLE"
                             description=""
                             name="infotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getFilteredProjectDetails">
                        <ResultType
                         aspect.dataShape="ARN.ProjectDetails1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="infotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getFilters_ProductsCategories_Names">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getHoldProjectsCount">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getLabelValue">
                        <ResultType
                         aspect.dataShape="ARN.PlanDetails.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="oid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getNumberOfPlans">
                        <ResultType
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getNumberOfProjectsRunning">
                        <ResultType
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getPlanDetails">
                        <ResultType
                         aspect.dataShape="ARN.PlanDetails.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="oid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getPlans">
                        <ResultType
                         aspect.dataShape="ARN.PlanDetails1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="OR:wt.projmgmt.admin.Project2:3303837"
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getPlanState">
                        <ResultType
                         aspect.dataShape="ARN.PlanDetails.DS"
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="oid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductCategories">
                        <ResultType
                         aspect.dataShape="ARN.ProjectsDetails.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductCategoriesCount">
                        <ResultType
                         aspect.dataShape="ARN.ProjectsByCategoryCount.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductTypeBasedOnProject">
                        <ResultType
                         aspect.dataShape="ARN.ProjectsDetails.DS"
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectBasedOnProjectType">
                        <ResultType
                         aspect.dataShape="ARN.ProjectDetails1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="productType"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectCategoryCountByProjectType">
                        <ResultType
                         aspect.dataShape="ARN.NameValue.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectCountBasedOnType">
                        <ResultType
                         aspect.dataShape="ARN.ProjectCountBasedOnType.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectDetails">
                        <ResultType
                         aspect.dataShape="ARN.ProjectDetails1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="name"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="OR%3Acom.ptc.projectmanagement.plan.Plan%3A3411492"
                             baseType="STRING"
                             description=""
                             name="oid"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjects">
                        <ResultType
                         aspect.dataShape="ARN.NameValue1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectsCount">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectsPhaseCount">
                        <ResultType
                         aspect.dataShape="ARN.ProjectPhaseCount.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectStatusCount">
                        <ResultType
                         aspect.dataShape="ARN.ProjectStatusCount.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectsV2">
                        <ResultType
                         aspect.dataShape="ARN.ProjectsDetails.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectTypeCount">
                        <ResultType
                         aspect.dataShape="ARN.NameValue.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProjectTypes">
                        <ResultType
                         aspect.dataShape="ARN.NameValue1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getRunningProjects">
                        <ResultType
                         aspect.dataShape="ARN.ProjectCount.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getRunningProjectsCopy">
                        <ResultType
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getScheduleData">
                        <ResultType
                         aspect.dataShape="ARN.ScheduleDetailsLevel1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="OR:wt.projmgmt.admin.Project2:3303837"
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="OR:com.ptc.projectmanagement.plan.Plan:3411264"
                             baseType="STRING"
                             description=""
                             name="planOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getScheduleDataForWorkView">
                        <ResultType
                         aspect.dataShape="ARN.ScheduleDetailsLevel1.DS"
                         baseType="JSON"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="OR:wt.projmgmt.admin.Project2:3303837"
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="OR:com.ptc.projectmanagement.plan.Plan:3411264"
                             baseType="STRING"
                             description=""
                             name="planOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getScheduleDetails">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getScheduleDetailsLevel2">
                        <ResultType
                         aspect.dataShape="ARN.ScheduleDetailsLevel1.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="containerOid"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="jsca_context"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="OR:com.ptc.projectmanagement.plan.Plan:3304015"
                             baseType="STRING"
                             description=""
                             name="planOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSuspenedProjectsCount">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="parseStringToDate">
                        <ResultType
                         baseType="DATETIME"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="StringDate"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="setDeliverablesLabel">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="input"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="test">
                        <ResultType
                         aspect.dataShape="ARN.ProjectsDetails.DS"
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ContainerOid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="testService">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="addProjectDetailsToProp">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectDetails1.DS"
                                        });
                                        
                                        let projects = me.getProjects();
                                        
                                        for(let x = 0; x < projects.rows.length; x++)
                                        {
                                           let projectDetails =  me.getProjectDetails({
                                                oid: projects.rows[x].Value,
                                                name: projects.rows[x].Name
                                            });
                                            
                                            result.AddRow({
                                                Status: projectDetails.rows[0].Status,
                                                Estimated_Start: projectDetails.rows[0].Estimated_Start,
                                                Estimated_Finish: projectDetails.rows[0].Estimated_Finish, 
                                                Actual_Start: projectDetails.rows[0].Actual_Start, 
                                                Actual_Finish: projectDetails.rows[0].Actual_Finish, 
                                                Cost: projectDetails.rows[0].Cost,
                                                Duration: projectDetails.rows[0].Duration, 
                                                Effort: projectDetails.rows[0].Effort, 
                                                Project_Type: projectDetails.rows[0].Project_Type,
                                                name: projectDetails.rows[0].name,
                                                oid: projects.rows[x].Value,
                                                productType: me.getProductTypeBasedOnProject({ ContainerOid: projects.rows[x].Value})
                                            });  
                                        }
                                        
                                        me.allProjectsDetails = result;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getActiveProjectsCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let activeProjectsCount = me.getRunningProjects();
                                        
                                        activeProjectsCount.rows.toArray().forEach(row => {
                                        	if (row.state == "Running") {
                                        		result = row.COUNT_state || 0;
                                        	}
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getBottleNecks">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let filteredPhaseData = Resources["InfoTableFunctions"].Query({
                                            t: scheduledData /* INFOTABLE */,
                                            query: {
                                                "filters": {
                                                    "type": "EQ",
                                                    "fieldName": "phase",
                                                    "value": currentPhase
                                                }
                                            }
                                        });
                                        
                                        let data = me.getScheduleDetailsLevel2({
                                        	planOid: filteredPhaseData.rows[0].planOid,
                                        	containerOid: filteredPhaseData.rows[0].containerOid,
                                        	jsca_context: filteredPhaseData.rows[0].jsca_context
                                        });
                                        
                                        let length = data.length;
                                        
                                        data.AddField({name: "bottleneck", baseType: "STRING"});
                                        
                                        for(let x = 0; x < length; x++)
                                        {
                                            let estimatedFinish = data.rows[x].estimatedFinish;
                                            let convertedDatetime = convertToDatetime(estimatedFinish);
                                            let presentTimestamp = new Date();
                                            let finishTimestamp = new Date(convertedDatetime);
                                            if (presentTimestamp > finishTimestamp)  data.rows[x].bottleneck = "Yes";
                                            else data.rows[x].bottleneck = "No";  
                                        }    
                                        
                                        let bottlenecks = Resources["InfoTableFunctions"].Query({
                                            t: data /* INFOTABLE */,
                                            query: {
                                                "filters": {
                                                    "type": "EQ",
                                                    "fieldName": "bottleneck",
                                                    "value": "Yes"
                                                }
                                            }
                                        });
                                        
                                        result = bottlenecks;
                                        
                                        //Converts the string Date to the DATETIME
                                        function convertToDatetime(str){
                                            let original=str;
                                            let replaced=original.replace(/\//g, "-");
                                            let datePart = replaced.split(" ")[0];
                                            let parts = datePart.split("-");
                                            let month = parts[0].padStart(2, '0');
                                            let day = parts[1].padStart(2, '0');
                                            let year = "20" + parts[2];
                                            let formattedDate = year + "-" + month + "-" + day;
                                            let time="T00:00:00";
                                            let datetime=  formattedDate+time;
                                            return datetime;
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getCurrentPhase">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        infotable = me.dummyInfotable;
                                        
                                        let result = '';
                                        
                                        for(let x = 0; x < infotable.rows.length; x++)
                                        {
                                            if(infotable.rows[x].percentEffortComplete == '100%' && x != infotable.rows.length)
                                            {
                                                result = infotable.rows[x+1].phase;
                                            }
                                            else if(infotable.rows[x].percentEffortComplete == '100%') result = infotable.rows[x].phase;
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getFilteredProjectDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let projectDetails = me.allProjectsDetails;
                                        
                                        data = projectDetails;
                                        
                                        for(let x = 0; x < data.length; x++)
                                        {
                                            let estimatedFinish = data.rows[x].Estimated_Finish;    
                                            let cleaned = estimatedFinish.replace("CET", "+0100");
                                            let finishTimestamp = parseDate(cleaned, "yyyy-MM-dd HH:mm Z");
                                            let presentTimestamp = new Date();
                                            if (presentTimestamp > finishTimestamp)  data.rows[x].projectStatus = "Delay";
                                            else data.rows[x].projectStatus = "On Track";  
                                        } 
                                        
                                        let result = Resources["InfoTableFunctions"].Query({
                                            t: data /* INFOTABLE */,
                                            query: {
                                                "filters": {
                                                    "type": "EQ",
                                                    "fieldName": "projectStatus",
                                                    "value": infotable.valueLabel
                                                }
                                            } 
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getFilters_ProductsCategories_Names">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let PartFailureName, ProductName, Description, FailureDate,
                                        	State, FailureMode, City, ProductCategory = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        		infoTableName: "InfoTable",
                                        		dataShapeName: "ARN.NameValue.DS"
                                        	});
                                        
                                        let data = InputInfotable;
                                        
                                        let PartFailureNameInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "PartFailureName" /* STRING */
                                        });
                                        
                                        let ProductNameInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "ProductName" /* STRING */
                                        });
                                        
                                        let DescriptionInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "Description" /* STRING */
                                        });
                                        
                                        let FailureDateInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "FailureDate" /* STRING */
                                        });
                                        
                                        let StateInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "State" /* STRING */
                                        });
                                        
                                        let FailureModeInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "FailureMode" /* STRING */
                                        });
                                        
                                        let CityInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "City" /* STRING */
                                        });
                                        
                                        let ProductCategoryInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "ProductCategory" /* STRING */
                                        });
                                        
                                        let finalInfotable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.GridFiltersData.DS"
                                        });
                                        
                                        finalInfotable.AddRow({
                                        	PartFailureName: PartFailureNameInfotable,
                                        	ProductName: ProductNameInfotable,
                                        	Description: DescriptionInfotable,
                                        	FailureDate: FailureDateInfotable,
                                        	State: StateInfotable,
                                        	FailureMode: FailureModeInfotable,
                                        	City: CityInfotable,
                                        	ProductCategory: ProductCategoryInfotable
                                        });
                                        
                                        result = finalInfotable;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getHoldProjectsCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let holdProjectsCount = me.getRunningProjects();
                                        
                                        holdProjectsCount.rows.toArray().forEach(row => {
                                        	if (row.state == "Hold") {
                                        		result = row.COUNT_state || 0;
                                        	} else {
                                        		result = 0;
                                        	}
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getLabelValue">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let planDetails = me.getPlanDetails({
                                        	oid: oid /* STRING */
                                        });
                                        
                                        // Create the InfoTable to return
                                        let planDetailInfotable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.PlanDetails.DS"
                                        });
                                        
                                        let flatData = {};
                                        let labelMap = {
                                        	"Status": "Status",
                                        	"% Work Complete": "Work_Complete",
                                        	"Estimated Start": "Estimated_Start",
                                        	"Estimated Finish": "Estimated_Finish",
                                        	"Actual Start": "Actual_Start",
                                        	"Actual Finish": "Actual_Finish",
                                        	"Fixed Cost": "Fixed_Cost",
                                        	"Cost": "Cost",
                                        	"Rolled up Cost": "Rolled_Up_Cost",
                                        	"Duration": "Duration",
                                        	"Calendar": "Calendar",
                                        	"Currency Symbol": "Currency_Symbol",
                                        	"Execution Control": "Execution_Control",
                                        	"Currency Placement": "Currency_Placement",
                                        	"Linked Deliverable": "Linked_Deliverable",
                                        	"Currency Decimal Digits": "Currency_Decimal_Digits",
                                        	"Context": "Context",
                                        	"Created On": "Created_On",
                                        	"Last Modified": "Last_Modified"
                                        };
                                        
                                        if (planDetails && planDetails.rows.length > 0) {
                                        	planDetails.rows.forEach(item => {
                                        		let label = item.attributeLabel;
                                        		let key = labelMap[label];
                                        		let value = item.attributeValue;
                                        
                                        		if (!key) return; // Skip if label is not mapped
                                        
                                        		switch (key) {
                                        			case "Work_Complete":
                                        				flatData[key] = parseFloat(value.replace('%', '')) || 0;
                                        				break;
                                        			case "Fixed_Cost":
                                        			case "Cost":
                                        			case "Rolled_Up_Cost":
                                        				flatData[key] = parseFloat(value.replace(/[₹,$]/g, '')) || 0;
                                        				break;
                                        			case "Duration":
                                        				flatData[key] = parseFloat(value.replace(/[^\d.]/g, '')) || 0;
                                        				break;
                                        			case "Linked_Deliverable":
                                        				flatData[key] = (value.toLowerCase() === "yes");
                                        				break;
                                        			case "Currency_Decimal_Digits":
                                        				flatData[key] = parseInt(value) || 0;
                                        				break;
                                        			case "Created_On":
                                        			case "Last_Modified":
                                        			case "Estimated_Start":
                                        			case "Estimated_Finish":
                                        			case "Actual_Start":
                                        			case "Actual_Finish":
                                        				try {
                                        					if (value instanceof Date && !isNaN(value.getTime())) {
                                        						flatData[key] = value; // already a valid Date object
                                        					} else if (typeof value === "string" && value.match(/^(\d{1,2})\/(\d{1,2})\/(\d{2}) (\d{1,2}):(\d{2}) (AM|PM)$/)) {
                                        						flatData[key] = me.parseStringToDate({
                                        							StringDate: value /* STRING */
                                        						});
                                        					} else {
                                        						let parsed = new Date(value);
                                        						flatData[key] = isNaN(parsed.getTime()) ? undefined : parsed;
                                        					}
                                        				} catch (e) {
                                        					flatData[key] = undefined;
                                        				}
                                        				break;
                                                        
                                        			case "Context":
                                        				try {
                                        					flatData[key] = JSON.parse(value).label || "";
                                        				} catch (e) {
                                        					flatData[key] = "";
                                        				}
                                        				break;
                                        			default:
                                        				flatData[key] = value;
                                        		}
                                        	});
                                        
                                        	// Add parsed row to the InfoTable
                                        	planDetailInfotable.AddRow(flatData);
                                        }
                                        
                                        result = planDetailInfotable;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getNumberOfPlans">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code></code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getNumberOfProjectsRunning">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let projects = me.allProjectsDetails;
                                        
                                        me.getPlanState({
                                        	oid: undefined /* STRING */
                                        });
                                        
                                        
                                        result = projects;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getPlanDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.PlanDetails.DS"
                                        });
                                        
                                        let pivotRow = {};
                                        Oid = oid;
                                        try
                                        {
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                            proxyScheme: undefined,
                                            headers: {
                                                authorization: "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                Cookie: "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                                Accept: "application/json"
                                            },
                                            ignoreSSLErrors: true,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/tcomp/attributesTable?oid=" + Oid + "&u8=1&AjaxEnabled=thirdLevelNav",
                                            timeout: 300
                                        });
                                        
                                        let cleaned = windchillData.replace(/<[^>]+>/g, "").replace(/&nbsp;/g, " ").trim();
                                        let parsed = JSON.parse(cleaned.split('^')[0].trim());
                                        
                                        windchillData = parsed.groups;
                                        
                                        let jsonArray = {};
                                        
                                        for(let x = 0; x < windchillData[0].rows.length; x++)
                                        {
                                            let columns = windchillData[0].rows[x].columns;
                                            
                                            for(let y = 0; y < columns.length; y++)
                                            {
                                            	jsonArray[columns[y].label] = (columns[y].value == '' || columns[y].value == undefined) ? '--' : columns[y].value;
                                            }
                                        }
                                        me.dummyJson = jsonArray;
                                            
                                        let newEntry = 
                                        {
                                            Status: getEstimatedFinish(jsonArray,"Status"), // STRING
                                            Work_Complete: getEstimatedFinish(jsonArray,"% Work Complete"),
                                            Estimated_Start: getEstimatedFinish(jsonArray,"Estimated Start"),
                                            Estimated_Finish: getEstimatedFinish(jsonArray,"Estimated Finish"),
                                            Actual_Start: getEstimatedFinish(jsonArray,"Actual Start"),
                                            Actual_Finish: getEstimatedFinish(jsonArray,"Actual Finish"),
                                            Fixed_Cost: undefined, // NUMBER
                                            Cost: undefined, // NUMBER
                                            Rolled_Up_Cost: undefined, // NUMBER
                                            Duration: undefined, // NUMBER
                                            Effort: undefined, // INTEGER
                                            Calendar: undefined, // STRING
                                            Currency_Symbol: undefined, // STRING
                                            Execution_Control: undefined, // STRING
                                            Currency_Placement: undefined, // STRING
                                            Linked_Deliverable: undefined, // BOOLEAN
                                            Currency_Decimal_Digits: undefined, // INTEGER
                                            Context: undefined, // STRING
                                            Created_On: undefined, // DATETIME
                                            Last_Modified: undefined // DATETIME
                                        };
                                        result.AddRow(newEntry);
                                        }
                                        catch(e)
                                        {
                                            result.AddRow({
                                                Work_Complete: "--",
                                                Estimated_Start: "--",
                                                Estimated_Finish: "--",
                                                Actual_Start: "--",
                                                Actual_Finish: "--"
                                            });
                                            logger.error("ARN.StatusDashboard.T >>> getPlanDetails >>> Error: "+e+" >>> lineNumber"+e.lineNumber);
                                        }
                                        //result = jsonArray;
                                        
                                        
                                        function getEstimatedFinish(json, key)
                                        {
                                            if (!json.hasOwnProperty(key)) return "--";
                                            else
                                            {
                                                let val = json[key];
                                                if (typeof val === "string")  return val;
                                                else if (typeof val === "object") return val.gui.export_value;
                                                else return "xcxc";
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getPlans">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getPlans
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.PlanDetails1.DS"
                                        });
                                        
                                        ContainerOid = ContainerOid.replace(/:/g, "%3A");
                                        
                                        try
                                        {
                                            let Header = {
                                                "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                                "Accept": "application/json"
                                            };
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header /* JSON */,
                                                ignoreSSLErrors: true /* BOOLEAN */,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/comp/projectmanagement.plan.plansTable?ContainerOid="+ContainerOid+"&oid="+ContainerOid+"&u8=1&portlet=component",
                                                timeout: 300 /* NUMBER {"defaultValue":60} */
                                            });
                                        
                                            let planNames = []; 
                                            let parts = windchillData.split('ext:qtip=');
                                        
                                            for (let i = 1; i < parts.length; i++) 
                                            {
                                                let segment = parts[i]; 
                                                
                                                let planName = segment.split('a>')[0]; 
                                                planName = planName.split('>')[0]; 
                                                planName = planName.replace("\ ",""); 
                                                planName = planName.replace(/["\\]/g, "");  
                                        		
                                        		let oid = parts[i];
                                        		oid = oid.split('"oid":')[1];
                                        		oid = oid.split(',"jsca_context":')[0];
                                        		
                                                result.AddRow({ planName: planName,  planOid: oid.replace(/"/g, ''), containerOid: ContainerOid});
                                            } 
                                        }
                                        catch(e)
                                        {
                                            logger.error("ARN.StatusDashboard.T >>> getPlans >>> Error: "+e+ " >>> lineNumber: "+e.lineNumber);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getPlanState">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.PlanDetails.DS"
                                        });
                                        
                                        let pivotRow = {};
                                        Oid = oid;
                                        
                                        let content = "oid="+oid+
                                            "&isContainerOid=N";
                                        
                                        let Header = {
                                                "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                                "Accept": "application/json"
                                            };
                                        
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText( {
                                            headers: Header,
                                            ignoreSSLErrors: true,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/projectStatusController/",
                                            content: content,
                                            timeout: 300,
                                            contentType: "application/x-www-form-urlencoded" /* STRING */ ,
                                        });
                                        
                                        result = windchillData.split('projectName"')[0];
                                        result = result.split('"state":"')[1];
                                        result = result.replace('","',"");
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductCategories">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectsDetails.DS"
                                        });
                                        
                                        let preResult = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectsDetails.DS"
                                        });
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        let projects = me.getProjects();
                                        
                                        for(let i = 0; i  < projects.length; i++)
                                        {    
                                            ContainerOid = encodeURI(projects.rows[i].Value);
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/tcomp/primaryAttributes?ContainerOid="+ContainerOid+"&oid="+ContainerOid+"&u8=1&AjaxEnabled=thirdLevelNav",
                                                timeout: 300
                                            });
                                        
                                            windchillData = windchillData.split("ap.init(")[1];
                                            windchillData = windchillData.split('"); </script>')[0];
                                            windchillData = windchillData.split(", 'attributePanel_primaryAttributes'")[0];
                                            windchillData = JSON.parse(windchillData);
                                            windchillData = windchillData.groups;
                                        
                                            let jsonArray = {};
                                        
                                            for(let x = 0; x < windchillData[0].rows.length; x++)
                                            {
                                                let columns = windchillData[0].rows[x].columns;
                                        
                                                for(let y = 0; y < columns.length; y++)
                                                {
                                                    jsonArray[columns[y].label] = (columns[y].value == '' || columns[y].value == undefined) ? '--' : columns[y].value;
                                                }
                                            }
                                        
                                            if (jsonArray.hasOwnProperty("Product Category")) 
                                            {
                                                preResult.AddRow({ProjectName: projects.rows[i].Name, ProductCategory: jsonArray["Product Category"]});
                                            } 
                                            else
                                            {
                                               preResult.AddRow({ProjectName: projects.rows[i].Name, ProductCategory: '--'});
                                            }
                                        }
                                        
                                        
                                        preResult = Resources["InfoTableFunctions"].Distinct({
                                        	t: preResult /* INFOTABLE */,
                                        	columns: "ProductCategory" /* STRING */
                                        });
                                        
                                        for(let x = 0; x < preResult.length; x ++)
                                        {
                                            let newEntry = {
                                                ProjectName: undefined,
                                                ProjectType: undefined,
                                                ProductCategory: preResult.rows[x].ProductCategory,
                                                ProjectBudget: undefined,
                                                ProjectBudgetUnit: undefined,
                                                SharedConceptLog: undefined
                                            };
                                            
                                            result.AddRow(newEntry);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductCategoriesCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectsByCategoryCount.DS"
                                        });
                                        
                                        let preResult = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectsDetails.DS"
                                        });
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        let projects = me.allProjects;
                                        
                                        for(let i = 0; i  < projects.length; i++)
                                        {    
                                            ContainerOid = encodeURI(projects.rows[i].Value);
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/tcomp/primaryAttributes?ContainerOid="+ContainerOid+"&oid="+ContainerOid+"&u8=1&AjaxEnabled=thirdLevelNav",
                                                timeout: 300
                                            });
                                        
                                            windchillData = windchillData.split("ap.init(")[1];
                                            windchillData = windchillData.split('"); </script>')[0];
                                            windchillData = windchillData.split(", 'attributePanel_primaryAttributes'")[0];
                                            windchillData = JSON.parse(windchillData);
                                            windchillData = windchillData.groups;
                                        
                                            let jsonArray = {};
                                        
                                            for(let x = 0; x < windchillData[0].rows.length; x++)
                                            {
                                                let columns = windchillData[0].rows[x].columns;
                                        
                                                for(let y = 0; y < columns.length; y++)
                                                {
                                                    jsonArray[columns[y].label] = (columns[y].value == '' || columns[y].value == undefined) ? 'Others' : columns[y].value;
                                                }
                                            }
                                        
                                            if (jsonArray.hasOwnProperty("Product Category")) 
                                            {
                                                preResult.AddRow({ProjectName: projects.rows[i].Name, ProductCategory: jsonArray["Product Category"]});
                                            } 
                                            else
                                            {
                                               preResult.AddRow({ProjectName: projects.rows[i].Name, ProductCategory: 'Others'});
                                            }
                                        }
                                        
                                        result = preResult;
                                        
                                        result = Resources["InfoTableFunctions"].Aggregate({
                                        	t: result,
                                        	columns: 'ProductCategory',
                                        	aggregates: 'COUNT',
                                        	groupByColumns: 'ProductCategory'
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductTypeBasedOnProject">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = '';
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        
                                        ContainerOid = encodeURI(ContainerOid);
                                        
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                            headers: Header,
                                            ignoreSSLErrors: true,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/tcomp/primaryAttributes?ContainerOid="+ContainerOid+"&oid="+ContainerOid+"&u8=1&AjaxEnabled=thirdLevelNav",
                                            timeout: 300
                                        });
                                        
                                        windchillData = windchillData.split("ap.init(")[1];
                                        windchillData = windchillData.split('"); </script>')[0];
                                        windchillData = windchillData.split(", 'attributePanel_primaryAttributes'")[0];
                                        windchillData = JSON.parse(windchillData);
                                        windchillData = windchillData.groups;
                                        
                                        let jsonArray = {};
                                        
                                        for(let x = 0; x < windchillData[0].rows.length; x++)
                                        {
                                            let columns = windchillData[0].rows[x].columns;
                                        
                                            for(let y = 0; y < columns.length; y++)
                                            {
                                                jsonArray[columns[y].label] = (columns[y].value == '' || columns[y].value == undefined) ? '--' : columns[y].value;
                                            }
                                        }
                                        
                                        if (jsonArray.hasOwnProperty("Product Category")) 
                                        {
                                            result = jsonArray["Product Category"];
                                        } 
                                        else
                                        {
                                            result = '--';
                                        }
                                        
                                        //result = jsonArray;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectBasedOnProjectType">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let projectDetails = me.allProjectsDetails;
                                        data = projectDetails;
                                        //let data = Resources["InfoTableFunctions"].Query({
                                        //    t: projectDetails,
                                        //    query:{
                                        //        "filters": {
                                        //            "type": "And",
                                        //            "filters": [{
                                        //                    "type": "EQ",
                                        //                    "fieldName": "Project_Type",
                                        //                    "value": type
                                        //                },
                                        //                {
                                        //                    "type": "EQ",
                                        //                    "fieldName": "productType",
                                        //                    "value": productType
                                        //                }
                                        //            ]
                                        //        }
                                        //    }
                                        //});
                                        //
                                        //data.AddField({name: "projectStatus", baseType: "STRING"});
                                        
                                        for(let x = 0; x < data.length; x++)
                                        {
                                            let estimatedFinish = data.rows[x].Estimated_Finish;    
                                            let cleaned = estimatedFinish.replace("CET", "+0100");
                                            let finishTimestamp = parseDate(cleaned, "yyyy-MM-dd HH:mm Z");
                                            let presentTimestamp = new Date();
                                            if (presentTimestamp > finishTimestamp)  data.rows[x].projectStatus = "Delay";
                                            else data.rows[x].projectStatus = "On Track";  
                                        } 
                                        result = data;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectCategoryCountByProjectType">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // Step 1: Fetch all projects
                                        let data = me.getProjectBasedOnProjectType({
                                        	type: undefined,
                                        	productType: undefined
                                        });
                                        
                                        // Step 2: Filter projects based on Project_Type from SeriesInfotable
                                        let projectTypeFilterValue = "";
                                        
                                        if (SeriesInfotable !== undefined && SeriesInfotable !== null && SeriesInfotable.rows.length > 0) {
                                            let seriesArray = SeriesInfotable.rows.toArray();
                                            projectTypeFilterValue = seriesArray[0].valueLabel;
                                        }
                                        
                                        let filteredProjects = Resources["InfoTableFunctions"].Query({
                                        	t: data,
                                        	query: {
                                        		filters: {
                                        			type: "AND",
                                        			filters: [{
                                        				fieldName: "Project_Type",
                                        				type: "EQ",
                                        				value: projectTypeFilterValue
                                        			}]
                                        		}
                                        	}
                                        });
                                        
                                        // Step 3: Aggregate on productType (count)
                                        let aggregatedResult = Resources["InfoTableFunctions"].Aggregate({
                                        	t: filteredProjects,
                                        	columns: "productType",
                                        	aggregates: "COUNT",
                                        	groupByColumns: "productType"
                                        });
                                        
                                        // Step 4: Create output infotable
                                        let infotable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        // Step 5: Populate infotable
                                        aggregatedResult.rows.toArray().forEach(row => {
                                            infotable.AddRow({
                                                Name: (row.productType === "--" || row.productType === null || row.productType === undefined) ? "Others" : row.productType,
                                                Value: row.COUNT_productType
                                            });
                                        });
                                        
                                        // Step 6: Set result
                                        result = infotable;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectCountBasedOnType">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let projects = me.allProjectsDetails;
                                        
                                        result = projects;
                                        
                                        result = Resources["InfoTableFunctions"].Aggregate({
                                        	t: projects /* INFOTABLE */,
                                        	columns: 'Project_Type' /* STRING */,
                                        	aggregates: 'COUNT' /* STRING */,
                                        	groupByColumns: 'Project_Type' /* STRING */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.ProjectDetails1.DS"
                                        });
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        oid = encodeURI(oid);
                                        
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                            headers: Header,
                                            ignoreSSLErrors: true,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/tcomp/attributesTable?ContainerOid="+oid+"&oid=OR%3Acom.ptc.projectmanagement.plan.Plan%3A3411492&u8=1&AjaxEnabled=thirdLevelNav",
                                            timeout: 300
                                        });
                                        
                                        let cleaned = windchillData.replace(/<[^>]+>/g, "").replace(/&nbsp;/g, " ").trim();
                                        let parsed = JSON.parse(cleaned.split('^')[0].trim());
                                        
                                        windchillData = parsed.groups;
                                        
                                        let jsonArray = {};
                                        
                                        for(let x = 0; x < windchillData[0].rows.length; x++)
                                        {
                                            let columns = windchillData[0].rows[x].columns;
                                            
                                            for(let y = 0; y < columns.length; y++)
                                            {
                                            	jsonArray[columns[y].label] = (columns[y].value == '' || columns[y].value == undefined) ? '--' : columns[y].value;
                                            }
                                        }
                                        
                                        let newEntry = 
                                        {
                                            Duration: getEstimatedFinish(jsonArray,"Duration"),
                                            Estimated_Start: getEstimatedFinish(jsonArray,"Estimated Start"),
                                            Estimated_Finish: getEstimatedFinish(jsonArray,"Estimated Finish"),
                                            Actual_Start: getEstimatedFinish(jsonArray,"Actual Start"),
                                            Actual_Finish: getEstimatedFinish(jsonArray,"Actual Finish"),
                                            Project_Type:  getEstimatedFinish(jsonArray,"Project Type"),
                                            Cost:  getEstimatedFinish(jsonArray,"Cost"),
                                            Status:  getEstimatedFinish(jsonArray,"Status"),
                                            Effort:  getEstimatedFinish(jsonArray,"Status"),
                                            name: name
                                        };
                                        result.AddRow(newEntry);
                                        
                                        function getEstimatedFinish(json, key)
                                        {
                                            if (!json.hasOwnProperty(key)) return "--";
                                            else
                                            {
                                                let val = json[key];
                                                if (typeof val === "string")  return val;
                                                else if (typeof val === "object") return val.gui.export_value;
                                                else return "xcxc";
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjects">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getProjects
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.NameValue1.DS"
                                        });
                                        
                                        try
                                        {
                                            let Header = {
                                                "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                                "Accept": "application/json"
                                            };
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/comp/netmarkets.project.list.table?portlet=component",
                                                timeout: 300
                                            });
                                            
                                            let firstSplit = windchillData.split("PTC.ExtJSONTableConfig.chunk =")[1];
                                            firstSplit = firstSplit.split(";PTC.ExtJSONTableConfig.totalRows")[0];
                                            
                                            let jsonData = JSON.parse(firstSplit);
                                            
                                            for(let x = 0; x < jsonData.data.length; x++)
                                            {
                                                result.AddRow({Name: jsonData.data[x].name.label, Value: jsonData.data[x].nmActions.params.ContainerOid});
                                            }  
                                            
                                            me.allProjects = result;
                                        }
                                        catch(e)
                                        {
                                            logger.error("ARN.NPI_NPD_Dashboard.T >>> getProjects >>> Error: "+e+ " >>> lineNumber: "+e.lineNumber);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectsCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allProjects = me.allProjects;
                                        
                                        result = allProjects.getRowCount() || 0;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectsPhaseCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getScheduleData
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectDeepdive.DS"
                                        });
                                        
                                        try
                                        {
                                            let Header = {
                                                "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                "Accept": "application/json"
                                            };
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/comp/netmarkets.project.list.table?portlet=component",
                                                timeout: 300
                                            });
                                        
                                            windchillData = windchillData.split("PTC.ExtJSONTableConfig.chunk =")[1];
                                            windchillData = windchillData.split(";PTC.ExtJSONTableConfig.totalRows")[0];
                                            windchillData = JSON.parse(windchillData);
                                        
                                            windchillData = windchillData.data;
                                        
                                        
                                            for(let x = 0; x < windchillData.length; x++)
                                            {
                                        
                                                let newEntry = {
                                                    projectPhase: windchillData[x].projectPhase, // STRING
                                                    oid: windchillData[x].oid, // STRING
                                                    state: windchillData[x].state, // STRING
                                                    completionStatus: windchillData[x].completionStatus.gui.export_value // STRING
                                                };
                                                result.AddRow(newEntry); 
                                            }
                                        
                                            result = Resources["InfoTableFunctions"].Aggregate({
                                                t: result,
                                                columns: 'projectPhase',
                                                aggregates: 'COUNT',
                                                groupByColumns: 'projectPhase'
                                            });
                                            
                                            if(result.length > 0 ) me.projectsPhaseCount = result; 
                                        }
                                        catch(e)
                                        {
                                            result = me.projectsPhaseCount;
                                            logger.error("ARN.StatusDashboard.T >>> getProjectsPhaseCount >>> Error: "+e+" lineNumber:"+e.lineNumber);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectStatusCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let projectDetails = me.allProjectsDetails;
                                        data = projectDetails;
                                        
                                        for(let x = 0; x < data.length; x++)
                                        {
                                            let estimatedFinish = data.rows[x].Estimated_Finish;    
                                            let cleaned = estimatedFinish.replace("CET", "+0100");
                                            let finishTimestamp = parseDate(cleaned, "yyyy-MM-dd HH:mm Z");
                                            let presentTimestamp = new Date();
                                            if (presentTimestamp > finishTimestamp)  data.rows[x].projectStatus = "Delay";
                                            else data.rows[x].projectStatus = "On Track";  
                                        } 
                                        result = data;
                                        
                                        
                                        let params = {
                                        	t: result /* INFOTABLE */,
                                        	columns: "projectStatus" /* STRING */,
                                        	aggregates: "COUNT" /* STRING */,
                                        	groupByColumns: "projectStatus" /* STRING */
                                        };
                                        result = Resources["InfoTableFunctions"].Aggregate(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectsV2">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectsDetails.DS"
                                        });
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        let projects = me.getProjects();
                                        
                                        for(let i = 0; i  < projects.length; i++)
                                        {    
                                            ContainerOid = encodeURI(projects.rows[i].Value);
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/tcomp/primaryAttributes?ContainerOid="+ContainerOid+"&oid="+ContainerOid+"&u8=1&AjaxEnabled=thirdLevelNav",
                                                timeout: 300
                                            });
                                        
                                            windchillData = windchillData.split("ap.init(")[1];
                                            windchillData = windchillData.split('"); </script>')[0];
                                            windchillData = windchillData.split(", 'attributePanel_primaryAttributes'")[0];
                                            windchillData = JSON.parse(windchillData);
                                            windchillData = windchillData.groups;
                                        
                                            let jsonArray = {};
                                        
                                            for(let x = 0; x < windchillData[0].rows.length; x++)
                                            {
                                                let columns = windchillData[0].rows[x].columns;
                                        
                                                for(let y = 0; y < columns.length; y++)
                                                {
                                                    jsonArray[columns[y].label] = (columns[y].value == '' || columns[y].value == undefined) ? '--' : columns[y].value;
                                                }
                                            }
                                        
                                            if (jsonArray.hasOwnProperty("Product Category")) 
                                            {
                                                result.AddRow({ProjectName: projects.rows[i].Name, ProductCategory: jsonArray["Product Category"]});
                                            } 
                                            else
                                            {
                                               result.AddRow({ProjectName: projects.rows[i].Name, ProductCategory: '--'});
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectTypeCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        try
                                        {    
                                            let projectDetails = me.allProjectsDetails;
                                            let data = projectDetails;
                                            
                                            for(let x = 0; x < data.length; x++)
                                            {
                                                let estimatedFinish = data.rows[x].Estimated_Finish;    
                                                let cleaned = estimatedFinish.replace("CET", "+0100");
                                                let finishTimestamp = parseDate(cleaned, "yyyy-MM-dd HH:mm Z");
                                                let presentTimestamp = new Date();
                                                if (presentTimestamp > finishTimestamp)  data.rows[x].projectStatus = "Delay";
                                                else data.rows[x].projectStatus = "On Track";  
                                            } 
                                        
                                            let NPIACount = Resources["InfoTableFunctions"].Query({
                                                t: data /* INFOTABLE */ ,
                                                query: {
                                                    "filters": {
                                                        "fieldName": "Project_Type",
                                                        "type": "EQ",
                                                        "value": "NPI-A"
                                                    }
                                                }
                                            });
                                        
                                            let NPIBCount = Resources["InfoTableFunctions"].Query({
                                                t: data /* INFOTABLE */ ,
                                                query: {
                                                    "filters": {
                                                        "fieldName": "Project_Type",
                                                        "type": "EQ",
                                                        "value": "NPI-B"
                                                    }
                                                }
                                            });
                                        
                                            let NPDACount = Resources["InfoTableFunctions"].Query({
                                                t: data /* INFOTABLE */ ,
                                                query: {
                                                    "filters": {
                                                        "fieldName": "Project_Type",
                                                        "type": "EQ",
                                                        "value": "NPD-A"
                                                    }
                                                }
                                            });
                                        
                                            let NPDBCount = Resources["InfoTableFunctions"].Query({
                                                t: data /* INFOTABLE */ ,
                                                query: {
                                                    "filters": {
                                                        "fieldName": "Project_Type",
                                                        "type": "EQ",
                                                        "value": "NPD-B"
                                                    }
                                                }
                                            });
                                            let infotable = me.getProjectTypes();
                                        
                                            infotable.rows.toArray().forEach(row => {
                                                if (row.Name == "NPI-A") row.Value = NPIACount.getRowCount();
                                                if (row.Name == "NPD-A") row.Value = NPIBCount.getRowCount();
                                                if (row.Name == "NPI-B") row.Value = NPDACount.getRowCount();
                                                if (row.Name == "NPD-B") row.Value = NPDBCount.getRowCount();
                                            });
                                            result = infotable;
                                            me.ProjectTypeCount = result;
                                        }
                                        catch(e)
                                        {
                                            result = me.ProjectTypeCount;
                                            logger.error(me.name + " >>> getProjectTypeCount >>> Error: "+e+" lineNumber:"+e.lineNumber);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProjectTypes">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.NameValue1.DS)
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.NameValue1.DS"
                                        });
                                        
                                        result.AddRow({ Name: "NPI-A",  Value: undefined});
                                        result.AddRow({ Name: "NPD-A",  Value: undefined});
                                        result.AddRow({ Name: "NPD-B",  Value: undefined});
                                        result.AddRow({ Name: "NPI-B",  Value: undefined});
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getRunningProjects">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getScheduleData
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectCount.DS"
                                        });
                                        
                                        try
                                        {
                                            let Header = {
                                                "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                //"Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                                "Accept": "application/json"
                                            };
                                        
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                                headers: Header /* JSON */,
                                                ignoreSSLErrors: true /* BOOLEAN */,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/comp/netmarkets.project.list.table?portlet=component",
                                                timeout: 300 /* NUMBER {"defaultValue":60} */
                                            });
                                        
                                            windchillData = windchillData.split("PTC.ExtJSONTableConfig.chunk =")[1];
                                            windchillData = windchillData.split(";PTC.ExtJSONTableConfig.totalRows")[0];
                                            windchillData = JSON.parse(windchillData);
                                        
                                            windchillData = windchillData.data;
                                        
                                        
                                            for(let x = 0; x < windchillData.length; x++)
                                            {
                                        
                                                let newEntry = {
                                                    projectPhase: windchillData[x].projectPhase, // STRING
                                                    oid: windchillData[x].oid, // STRING
                                                    state: windchillData[x].state, // STRING
                                                    completionStatus: windchillData[x].completionStatus.gui.export_value // STRING
                                                };
                                                result.AddRow(newEntry); 
                                            }
                                        
                                            result = Resources["InfoTableFunctions"].Aggregate({
                                                t: result,
                                                columns: 'state',
                                                aggregates: 'COUNT',
                                                groupByColumns: 'state'
                                            });
                                            
                                            me.runningProjects = result;
                                        }
                                        catch(e)
                                        {
                                            result = me.runningProjects;
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getRunningProjectsCopy">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getScheduleData
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ProjectDeepdive.DS"
                                        });
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            //"Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                            headers: Header /* JSON */,
                                            ignoreSSLErrors: true /* BOOLEAN */,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/comp/netmarkets.project.list.table?portlet=component",
                                            timeout: 300 /* NUMBER {"defaultValue":60} */
                                        });
                                        
                                        windchillData = windchillData.split("PTC.ExtJSONTableConfig.chunk =")[1];
                                        windchillData = windchillData.split(";PTC.ExtJSONTableConfig.totalRows")[0];
                                        windchillData = JSON.parse(windchillData);
                                        
                                        windchillData = windchillData.data;
                                        
                                        
                                        for(let x = 0; x < windchillData.length; x++)
                                        {
                                            
                                            let newEntry = {
                                                projectPhase: windchillData[x].projectPhase, // STRING
                                                oid: windchillData[x].oid, // STRING
                                                state: windchillData[x].state, // STRING
                                                completionStatus: windchillData[x].completionStatus.gui.export_value // STRING
                                            };
                                            result.AddRow(newEntry); 
                                        }
                                        
                                        
                                        
                                        result = Resources["InfoTableFunctions"].Aggregate({
                                        	t: result /* INFOTABLE */,
                                        	columns: 'projectPhase' /* STRING */,
                                        	aggregates: 'COUNT' /* STRING */,
                                        	groupByColumns: 'projectPhase' /* STRING */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getScheduleData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getScheduleData
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ScheduleDetailsLevel1.DS"
                                        });
                                        
                                        planOid = planOid.replace(/:/g, "%3A");
                                        ContainerOid = ContainerOid.replace(/:/g, "%3A");
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            //"Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                            headers: Header /* JSON */,
                                            ignoreSSLErrors: true /* BOOLEAN */,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/comp/projectmanagement.viewPlan?u8=1&tableID=projectmanagement.plan.view"+
                                            "&ContainerOid="+ContainerOid+"&oid="+planOid,
                                            timeout: 300 /* NUMBER {"defaultValue":60} */
                                        });
                                        
                                        windchillData = windchillData.split("PTC.ExtJSONTableConfig.initialRows=")[1];
                                        windchillData = windchillData.split(";PTC.ExtJSONTableConfig.totalRows")[0];
                                        windchillData = JSON.parse(windchillData);
                                        
                                        for(let x = 0; x < windchillData.length; x++)
                                        {
                                            let phaseData =  windchillData[x];
                                        
                                            result.AddRow({
                                                phase: phaseData.name, // STRING
                                                estimatedFinish: phaseData.estimatedFinish, // STRING
                                                deadline: phaseData.deadline.gui.value, // STRING
                                                duration: getEstimatedFinish(phaseData,"duration"), // STRING
                                                estimatedStart: phaseData.estimatedStart, // STRING
                                                planOid:  windchillData[0].oid, // STRING
                                                containerOid: phaseData.nmActions.params.ContainerOid, // STRING
                                                _parent: phaseData._parent,
                                                jsca_context: phaseData.jsca_context,
                                                percentEffortComplete: getEstimatedFinish(phaseData,"percentEffortComplete")
                                            });
                                        }
                                        //result = windchillData;
                                        function getEstimatedFinish(json, key)
                                        {
                                            if (!json.hasOwnProperty(key)) return "--";
                                            else
                                            {
                                                let val = json[key];
                                                if (typeof val === "string")  return val;
                                                else if (typeof val === "object") return val.gui.export_value;
                                                else return "xcxc";
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getScheduleDataForWorkView">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                        	Service    : getScheduleData
                                            Description: This Service gives the plans as an output based on response from POST
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ScheduleDetailsLevel1.DS"
                                        });
                                        
                                        planOid = planOid.replace(/:/g, "%3A");
                                        ContainerOid = ContainerOid.replace(/:/g, "%3A");
                                        
                                        let Header = {
                                            "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                            "Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                            "Accept": "application/json"
                                        };
                                        
                                        let windchillData = Resources["ContentLoaderFunctions"].PostText({
                                            headers: Header /* JSON */,
                                            ignoreSSLErrors: true /* BOOLEAN */,
                                            url: "https://windchill.arorian.com/Windchill/ptc1/comp/projectmanagement.viewPlan?u8=1&tableID=projectmanagement.plan.view&ContainerOid="+ContainerOid+"&oid="+planOid,
                                            timeout: 300 /* NUMBER {"defaultValue":60} */
                                        });
                                        
                                        windchillData = windchillData.split("PTC.ExtJSONTableConfig.initialRows=")[1];
                                        windchillData = windchillData.split(";PTC.ExtJSONTableConfig.totalRows")[0];
                                        windchillData = JSON.parse(windchillData);
                                        me.dummyJson = windchillData;
                                        result = windchillData[0];
                                        //for(let x = 0; x < windchillData.length; x++)
                                        //{
                                        //    let phaseData =  windchillData[x];
                                        //
                                        //    result.AddRow({
                                        //        phase: phaseData.name, // STRING
                                        //        estimatedFinish: phaseData.estimatedFinish, // STRING
                                        //        deadline: phaseData.deadline.gui.value, // STRING
                                        //        duration: getEstimatedFinish(phaseData,"duration"), // STRING
                                        //        estimatedStart: phaseData.estimatedStart, // STRING
                                        //        planOid: phaseData.oid, // STRING
                                        //        containerOid: phaseData.nmActions.params.ContainerOid, // STRING
                                        //        _parent: phaseData._parent,
                                        //        jsca_context: phaseData.jsca_context
                                        //    });
                                        //}
                                        ////result = windchillData;
                                        //function getEstimatedFinish(json, key)
                                        //{
                                        //    if (!json.hasOwnProperty(key)) return "--";
                                        //    else
                                        //    {
                                        //        let val = json[key];
                                        //        if (typeof val === "string")  return val;
                                        //        else if (typeof val === "object") return val.gui.export_value;
                                        //        else return "xcxc";
                                        //    }
                                        //}
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getScheduleDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                            Service    : getPlans
                                            Description: This Service gives the plans (attributes) as an output based on the response from POST.
                                            Output     : JSON string representing an array of { Name, Value } objects.
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        try {
                                            // Define request headers.
                                            let headers = {
                                                Authorization: "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                //Cookie: "JSESSIONID=A3A886C79BA00AFE1EFCD5FFFA6892FB.tomcat1",
                                                Accept: "application/json"
                                            };
                                        
                                            // Set up the request parameters.
                                            let params = {
                                                proxyScheme: undefined,
                                                headers: headers,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/comp/projectmanagement.viewPlan",
                                                content: undefined,
                                                timeout: 300
                                            };
                                        
                                            // Retrieve the raw text response.
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText(params);
                                            result = windchillData;
                                        }
                                        catch(e)
                                        {
                                            logger.warn("Error: "+e+">>> Error line Number"+e.lineNumber);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getScheduleDetailsLevel2">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*
                                            Service    : getPlans
                                            Description: This Service gives the plans (attributes) as an output based on the response from POST.
                                            Output     : JSON string representing an array of { Name, Value } objects.
                                            Created By : Shashi Preetham
                                            Created On : 14-04-2025
                                        */
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "ARN.ScheduleDetailsLevel1.DS"
                                        });
                                        
                                        try {
                                            let Headers = {
                                                "authorization": "Basic RFBUVXNlcjpEUFRBZG1pbg==",
                                                //"Cookie": "JSESSIONID=C6C0C70234E33F692340A9E0F52CA686.tomcat1",
                                                "Accept": "application/json"
                                            };
                                        
                                            let content = "anode="+jsca_context+
                                                "&e="+jsca_context+
                                                "&actionMethod=expand"+
                                                "&acquire=row"+
                                                "&level=2"+
                                                "&u8=1"+
                                                "&tableID=projectmanagement.plan.view"+
                                                //"&ContainerOid="+containerOid+
                                                "&oid="+planOid;
                                          
                                            let windchillData = Resources["ContentLoaderFunctions"].PostText( {
                                                headers: Headers,
                                                ignoreSSLErrors: true,
                                                url: "https://windchill.arorian.com/Windchill/ptc1/comp/projectmanagement.viewPlan",
                                                content: content,
                                                timeout: 300,
                                                contentType: "application/x-www-form-urlencoded" /* STRING */ ,
                                            });
                                            
                                            windchillData = windchillData.split("<!-- BEGIN PURE JSON -->")[1];
                                            windchillData = windchillData.split("<!-- END PURE JSON -->")[0];
                                            windchillData = JSON.parse(windchillData);
                                        
                                            for(let x = 0; x < windchillData.rows.length; x++)
                                            {
                                                let phaseChildData =  windchillData.rows[x];
                                        
                                                result.AddRow({
                                                    phase: phaseChildData.name, // STRING
                                                    estimatedFinish: phaseChildData.estimatedFinish, // STRING
                                                    deadline: phaseChildData.deadline.gui.value, // STRING
                                                    duration: getEstimatedFinish(phaseChildData, "duration"), // STRING
                                                    estimatedStart: phaseChildData.estimatedStart, // STRING
                                                    planOid: phaseChildData.oid, // STRING
                                                    containerOid: phaseChildData.nmActions.params.ContainerOid, // STRING
                                                });
                                            }
                                        
                                         
                                        }
                                        catch(e)
                                        {
                                            logger.error("Error: "+e+">>> Error line Number"+e.lineNumber);
                                        }
                                        
                                        //result = windchillData;
                                        function getEstimatedFinish(json, key)
                                        {
                                            if (!json.hasOwnProperty(key)) return "--";
                                            else
                                            {
                                                let val = json[key];
                                                if (typeof val === "string")  return val;
                                                else if (typeof val === "object") return val.gui.export_value;
                                                else return "--";
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSuspenedProjectsCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let suspendedProjectsCount = me.getRunningProjects();
                                        
                                        suspendedProjectsCount.rows.toArray().forEach(row => {
                                        	if (row.state == "Suspended") {
                                        		result = row.COUNT_state || 0;
                                        	}
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="parseStringToDate">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let value;
                                        
                                        function parseDateFromString(dateStr) {
                                            if (!dateStr || dateStr.trim() === "") {
                                                value = undefined;
                                                return;
                                            }
                                        
                                            // Match format: MM/DD/YY hh:mm AM/PM
                                            const parts = dateStr.match(/^(\d{1,2})\/(\d{1,2})\/(\d{2}) (\d{1,2}):(\d{2}) (AM|PM)$/);
                                            if (!parts) {
                                                value = undefined;
                                                return;
                                            }
                                        
                                            let [_, month, day, year, hour, minute, ampm] = parts;
                                        
                                            year = parseInt(year, 10);
                                            year += (year < 50) ? 2000 : 1900; // Handle 2-digit year
                                            hour = parseInt(hour, 10);
                                            if (ampm === "PM" && hour !== 12) hour += 12;
                                            if (ampm === "AM" && hour === 12) hour = 0;
                                        
                                            value = new Date(year, parseInt(month) - 1, parseInt(day), hour, parseInt(minute));
                                        }
                                        
                                        parseDateFromString(StringDate);
                                        
                                        result = value;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="setDeliverablesLabel">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let result = input;
                                        if(result == undefined || result ==  null) result = "Deliverables";
                                        else if(input.includes("Phase")) result = input + " Deliverables";
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="test">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        //for(let x = 0; x < data.length; x++)
                                        //{
                                            let estimatedFinish = "2025-12-01 17:00 CET";
                                            let convertedDatetime = convertToDatetime(estimatedFinish);
                                            let presentTimestamp = new Date();
                                            let finishTimestamp = new Date(convertedDatetime);
                                        //    if (presentTimestamp > finishTimestamp)  data.rows[x].projectStatus = "Delay";
                                        //    else data.rows[x].projectStatus = "On Track";  
                                        //} 
                                        
                                        let cleaned = estimatedFinish.replace("CET", "+0100");
                                        let dateValue = parseDate(cleaned, "yyyy-MM-dd HH:mm Z");
                                        
                                        result = presentTimestamp < dateValue;
                                        
                                        function convertToDatetime(str){
                                            let original=str;
                                            let replaced=original.replace(/\//g, "-");
                                            let datePart = replaced.split(" ")[0];
                                            let parts = datePart.split("-");
                                            let month = parts[0].padStart(2, '0');
                                            let day = parts[1].padStart(2, '0');
                                            let year = "20" + parts[2];
                                            let formattedDate = year + "-" + month + "-" + day;
                                            let time="T00:00:00";
                                            let datetime =  formattedDate+time;
                                            return datetime;
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="testService">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let username = "livadmin";
                                        let password = "livadmin";
                                        
                                        // Combine with colon as per Basic Auth format
                                        let raw = username + ":" + password;
                                        
                                        // Encode to Base64
                                        let encodedValue = base64EncodeString(raw);
                                        
                                        // Final Authorization Header Value
                                        let basicToken = "Basic " + encodedValue;
                                        
                                        result = basicToken;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="allProjects"></AlertDefinitions>
                <AlertDefinitions
                 name="allProjectsDetails"></AlertDefinitions>
                <AlertDefinitions
                 name="dummyInfotable"></AlertDefinitions>
                <AlertDefinitions
                 name="dummyJson"></AlertDefinitions>
                <AlertDefinitions
                 name="projectsPhaseCount"></AlertDefinitions>
                <AlertDefinitions
                 name="ProjectTypeCount"></AlertDefinitions>
                <AlertDefinitions
                 name="runningProjects"></AlertDefinitions>
                <AlertDefinitions
                 name="scheduledData"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <dummyInfotable>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="_parent"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="containerOid"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="deadline"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="duration"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="estimatedFinish"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="estimatedStart"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="jsca_context"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="percentEffortComplete"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="phase"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="planOid"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    -1
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    2%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Aro Internal Testing
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304085!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    100%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Plan Start
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304021!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    7%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Concept Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    9/10/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    9/10/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    5/07/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304022!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Development Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    10/23/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    10/23/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    7/30/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304023!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Validation Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    10/09/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304024!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Launch Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    11/24/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    11/24/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    11/24/25 05:00 PM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304311!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Plan Finish
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2025-04-22T12:16:12.256Z</Timestamp>
                    <Quality>GOOD</Quality>
                </dummyInfotable>
                <ProjectTypeCount>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Name"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Value"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    NPI-A
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    5.0
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    NPD-A
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    0.0
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    NPD-B
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    0.0
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    NPI-B
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    0.0
                                    ]]>
                                    </Value>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2025-05-05T11:08:25.172Z</Timestamp>
                    <Quality>GOOD</Quality>
                </ProjectTypeCount>
                <runningProjects>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="NUMBER"
                                     description=""
                                     name="COUNT_state"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="state"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <COUNT_state>4.0</COUNT_state>
                                    <state>
                                    <![CDATA[
                                    Running
                                    ]]>
                                    </state>
                                </Row>
                                <Row>
                                    <COUNT_state>1.0</COUNT_state>
                                    <state>
                                    <![CDATA[
                                    Suspended
                                    ]]>
                                    </state>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2025-05-05T11:08:25.487Z</Timestamp>
                    <Quality>GOOD</Quality>
                </runningProjects>
                <scheduledData>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="_parent"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="containerOid"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="deadline"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="duration"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="estimatedFinish"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="estimatedStart"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="jsca_context"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="percentEffortComplete"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="phase"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="planOid"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    -1
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    2%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Aro Internal Testing
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304085!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    100%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Plan Start
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    3/18/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304021!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    7%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Concept Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    9/10/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    9/10/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    5/07/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304022!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Development Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    10/23/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    10/23/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    7/30/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304023!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Validation Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    11/25/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    10/09/25 08:00 AM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304024!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Launch Phase
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                                <Row>
                                    <_parent>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015!*
                                    ]]>
                                    </_parent>
                                    <containerOid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </containerOid>
                                    <deadline>
                                    <![CDATA[
                                    11/24/25 05:00 PM
                                    ]]>
                                    </deadline>
                                    <duration>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </duration>
                                    <estimatedFinish>
                                    <![CDATA[
                                    11/24/25 05:00 PM
                                    ]]>
                                    </estimatedFinish>
                                    <estimatedStart>
                                    <![CDATA[
                                    11/24/25 05:00 PM
                                    ]]>
                                    </estimatedStart>
                                    <jsca_context>
                                    <![CDATA[
                                    comp$projectmanagement$OR:com.ptc.projectmanagement.plan.Plan:3304015$OR:com.ptc.projectmanagement.plan.Plan:3304015^OR:com.ptc.projectmanagement.plan.PlanActivity:3304311!*
                                    ]]>
                                    </jsca_context>
                                    <percentEffortComplete>
                                    <![CDATA[
                                    0%
                                    ]]>
                                    </percentEffortComplete>
                                    <phase>
                                    <![CDATA[
                                    Plan Finish
                                    ]]>
                                    </phase>
                                    <planOid>
                                    <![CDATA[
                                    OR:com.ptc.projectmanagement.plan.Plan:3304015
                                    ]]>
                                    </planOid>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2025-04-22T13:48:45.238Z</Timestamp>
                    <Quality>GOOD</Quality>
                </scheduledData>
                <dummyJson>
                    <Value>
                    <![CDATA[
                    {"Status":{"renderer":"jsca.columns.imageRenderer","gui":{"styleClasses":"","img":"netmarkets/images/green.gif","text":"Green","id":"","comparable":"Green","url":"","export_value":"Green"}},"Actual Start":"3/24/25 08:00 AM","Rolled up Cost":"\u20b90","Effort":{"gui":{"html":"4,121.6 hrs","comparable":4121.6,"export_value":"4,121.6 hrs"}},"% Work Complete":{"renderer":"jsca.columns.numericRenderer","gui":{"displayValue":"0%","comparable":0,"export_value":"0%"}},"Actual Finish":"--","Fixed Cost":"\u20b90","Duration":{"gui":{"html":"175 days","comparable":"175 days"}},"Estimated Finish":"11/21/25 05:00 PM","Cost":"\u20b90","Estimated Start":"3/24/25 08:00 AM"}
                    ]]>
                    </Value>
                    <Timestamp>2025-05-05T11:09:05.062Z</Timestamp>
                    <Quality>GOOD</Quality>
                </dummyJson>
                <allProjects>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Name"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Value"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    Livpure Demo Project
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3040063
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    LivPure Demo 18 March2025
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3308144
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    LivpureProjectB
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3538600
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    Aro Internal Testing
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </Value>
                                </Row>
                                <Row>
                                    <Name>
                                    <![CDATA[
                                    Liv Project Testing
                                    ]]>
                                    </Name>
                                    <Value>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3337245
                                    ]]>
                                    </Value>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2025-05-05T11:08:26.502Z</Timestamp>
                    <Quality>GOOD</Quality>
                </allProjects>
                <allProjectsDetails>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Actual_Finish"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Actual_Start"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Cost"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Duration"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Effort"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Estimated_Finish"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Estimated_Start"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="name"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="oid"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="productType"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Project_Type"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="projectStatus"
                                     ordinal="0"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="Status"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <Actual_Finish></Actual_Finish>
                                    <Actual_Start>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </Actual_Start>
                                    <Cost>
                                    <![CDATA[
                                    ₹0
                                    ]]>
                                    </Cost>
                                    <Duration>
                                    <![CDATA[
                                    5,040,000,000
                                    ]]>
                                    </Duration>
                                    <Effort>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Effort>
                                    <Estimated_Finish>
                                    <![CDATA[
                                    2025-12-01 17:00 CET
                                    ]]>
                                    </Estimated_Finish>
                                    <Estimated_Start>
                                    <![CDATA[
                                    2025-04-01 08:00 CEST
                                    ]]>
                                    </Estimated_Start>
                                    <Project_Type>
                                    <![CDATA[
                                    NPI-A
                                    ]]>
                                    </Project_Type>
                                    <Status>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Status>
                                    <name>
                                    <![CDATA[
                                    Livpure Demo Project
                                    ]]>
                                    </name>
                                    <oid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3040063
                                    ]]>
                                    </oid>
                                    <productType>
                                    <![CDATA[
                                    Water Purifier
                                    ]]>
                                    </productType>
                                </Row>
                                <Row>
                                    <Actual_Finish></Actual_Finish>
                                    <Actual_Start>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </Actual_Start>
                                    <Cost>
                                    <![CDATA[
                                    ₹0
                                    ]]>
                                    </Cost>
                                    <Duration>
                                    <![CDATA[
                                    5,040,000,000
                                    ]]>
                                    </Duration>
                                    <Effort>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Effort>
                                    <Estimated_Finish>
                                    <![CDATA[
                                    2025-12-01 17:00 CET
                                    ]]>
                                    </Estimated_Finish>
                                    <Estimated_Start>
                                    <![CDATA[
                                    2025-04-01 08:00 CEST
                                    ]]>
                                    </Estimated_Start>
                                    <Project_Type>
                                    <![CDATA[
                                    NPI-A
                                    ]]>
                                    </Project_Type>
                                    <Status>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Status>
                                    <name>
                                    <![CDATA[
                                    LivPure Demo 18 March2025
                                    ]]>
                                    </name>
                                    <oid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3308144
                                    ]]>
                                    </oid>
                                    <productType>
                                    <![CDATA[
                                    Air Conditioner
                                    ]]>
                                    </productType>
                                </Row>
                                <Row>
                                    <Actual_Finish></Actual_Finish>
                                    <Actual_Start>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </Actual_Start>
                                    <Cost>
                                    <![CDATA[
                                    ₹0
                                    ]]>
                                    </Cost>
                                    <Duration>
                                    <![CDATA[
                                    5,040,000,000
                                    ]]>
                                    </Duration>
                                    <Effort>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Effort>
                                    <Estimated_Finish>
                                    <![CDATA[
                                    2025-12-01 17:00 CET
                                    ]]>
                                    </Estimated_Finish>
                                    <Estimated_Start>
                                    <![CDATA[
                                    2025-04-01 08:00 CEST
                                    ]]>
                                    </Estimated_Start>
                                    <Project_Type>
                                    <![CDATA[
                                    NPI-A
                                    ]]>
                                    </Project_Type>
                                    <Status>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Status>
                                    <name>
                                    <![CDATA[
                                    LivpureProjectB
                                    ]]>
                                    </name>
                                    <oid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3538600
                                    ]]>
                                    </oid>
                                    <productType>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </productType>
                                </Row>
                                <Row>
                                    <Actual_Finish></Actual_Finish>
                                    <Actual_Start>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </Actual_Start>
                                    <Cost>
                                    <![CDATA[
                                    ₹0
                                    ]]>
                                    </Cost>
                                    <Duration>
                                    <![CDATA[
                                    5,040,000,000
                                    ]]>
                                    </Duration>
                                    <Effort>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Effort>
                                    <Estimated_Finish>
                                    <![CDATA[
                                    2025-12-01 17:00 CET
                                    ]]>
                                    </Estimated_Finish>
                                    <Estimated_Start>
                                    <![CDATA[
                                    2025-04-01 08:00 CEST
                                    ]]>
                                    </Estimated_Start>
                                    <Project_Type>
                                    <![CDATA[
                                    NPI-A
                                    ]]>
                                    </Project_Type>
                                    <Status>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Status>
                                    <name>
                                    <![CDATA[
                                    Aro Internal Testing
                                    ]]>
                                    </name>
                                    <oid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3303837
                                    ]]>
                                    </oid>
                                    <productType>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </productType>
                                </Row>
                                <Row>
                                    <Actual_Finish></Actual_Finish>
                                    <Actual_Start>
                                    <![CDATA[
                                    --
                                    ]]>
                                    </Actual_Start>
                                    <Cost>
                                    <![CDATA[
                                    ₹0
                                    ]]>
                                    </Cost>
                                    <Duration>
                                    <![CDATA[
                                    5,040,000,000
                                    ]]>
                                    </Duration>
                                    <Effort>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Effort>
                                    <Estimated_Finish>
                                    <![CDATA[
                                    2025-12-01 17:00 CET
                                    ]]>
                                    </Estimated_Finish>
                                    <Estimated_Start>
                                    <![CDATA[
                                    2025-04-01 08:00 CEST
                                    ]]>
                                    </Estimated_Start>
                                    <Project_Type>
                                    <![CDATA[
                                    NPI-A
                                    ]]>
                                    </Project_Type>
                                    <Status>
                                    <![CDATA[
                                    Unavailable
                                    ]]>
                                    </Status>
                                    <name>
                                    <![CDATA[
                                    Liv Project Testing
                                    ]]>
                                    </name>
                                    <oid>
                                    <![CDATA[
                                    OR:wt.projmgmt.admin.Project2:3337245
                                    ]]>
                                    </oid>
                                    <productType>
                                    <![CDATA[
                                    Air Conditioner
                                    ]]>
                                    </productType>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2025-05-04T13:06:12.229Z</Timestamp>
                    <Quality>GOOD</Quality>
                </allProjectsDetails>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
