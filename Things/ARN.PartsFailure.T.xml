<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="4"
 universal="">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         inheritedValueStream=""
         name="ARN.PartsFailure.T"
         projectName="Arorian"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isIndexed="false"
                     aspect.isPersistent="true"
                     baseType="JSON"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="responseData"
                     ordinal="2"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="exportData">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailureExport.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getCityGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getCityList">
                        <ResultType
                         aspect.dataShape="ARN.NameValue.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getEnvironmentConditionGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getFailureMode_GridData">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailure.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="City"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="Description"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="FailureMode"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="PartsFailureName"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductCategory"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductName"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="State"
                             ordinal="6"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getFailureModeGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getFilters_ProductsCategories_Names">
                        <ResultType
                         aspect.dataShape="ARN.GridFiltersData.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description="FToT - Failure Trends Over Time"
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getFToTGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getIssueGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getPartsFailureByCount">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getPartsFailureData">
                        <ResultType
                         baseType="JSON"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductCategories">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductCategory_GridData">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailure.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="City"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="Description"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="FailureMode"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="PartsFailureName"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductCategory"
                             ordinal="10"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductName"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable2"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="State"
                             ordinal="7"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductRegion_GridData">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailure.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="City"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="Description"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="FailureMode"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="PartsFailureName"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductCategory"
                             ordinal="10"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductName"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="SeriesInfotable2"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="State"
                             ordinal="7"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductsList">
                        <ResultType
                         aspect.dataShape="ARN.NameValue.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSelectedData">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailure.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.dataShape="ARN.PartsFailure.DS"
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfoTable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getStateGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getStatesList">
                        <ResultType
                         aspect.dataShape="ARN.NameValue.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getTotalFailure">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailureScore.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getWarrantyGraphData">
                        <ResultType
                         aspect.dataShape="ARN.Graph.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="processResponse">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailure.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="queryPartsFailure">
                        <ResultType
                         aspect.dataShape="ARN.PartsFailure.DS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="City"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="FromDate"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="ProductName"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="State"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="ToDate"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="testService">
                        <ResultType
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INFOTABLE"
                             description=""
                             name="InputInfotable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="exportData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        result =  data;
                                        result.RemoveField("SerialId");
                                        result.RemoveField("FailureMode");
                                        result.RemoveField("ProductID");
                                        result.RemoveField("FailureEnvironment");
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getCityGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "City" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	if (row.City !== "" && row.City !== null && row.City !== undefined) {
                                        		let dataRows = Resources["InfoTableFunctions"].Query({
                                        			t: data /* INFOTABLE */ ,
                                        			query: {
                                        				filters: {
                                        					type: "AND",
                                        					filters: [{
                                        							type: "EQ",
                                        							fieldName: "ProductCategory",
                                        							value: SeriesInfotable[0].valueLabel
                                        						},
                                        						{
                                        							"type": "EQ",
                                        							"fieldName": "City",
                                        							"value": row.City
                                        						}
                                        					]
                                        
                                        				}
                                        			} /* QUERY */
                                        		});
                                        
                                        		if (dataRows.getRowCount() > 0) {
                                        			pieGraph.AddRow({
                                        				Name: row.City, // STRING
                                        				Count: dataRows.getRowCount() // NUMBER
                                        			});
                                        		}
                                        	}
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getCityList">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        	values: undefined /* INFOTABLE */ ,
                                        	maxItems: undefined /* NUMBER {"defaultValue":500} */ ,
                                        	tags: undefined /* TAGS */ ,
                                        	source: undefined /* STRING */ ,
                                        	query: undefined /* QUERY */
                                        });
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "City" /* STRING */
                                        });
                                        
                                        let cityList = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	cityList.AddRow({
                                        		Name: row.City, // STRING
                                        		Value: row.City // STRING
                                        	});
                                        
                                        });
                                        
                                        result = cityList;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getEnvironmentConditionGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "FailureEnvironment" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	let env = row.FailureEnvironment || "Unknown";
                                        	let dataRows = Resources["InfoTableFunctions"].Query({
                                        		t: data, // INFOTABLE
                                        		query: {
                                        			filters: {
                                        				type: "EQ",
                                        				fieldName: "FailureEnvironment",
                                        				value: env
                                        			}
                                        		}
                                        	});
                                        
                                        	pieGraph.AddRow({
                                        		Name: env, // STRING
                                        		Count: dataRows.getRowCount() // NUMBER
                                        	});
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getFailureMode_GridData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /**
                                         * Service Name : filterFailureModeFromData
                                         * Description  : Filters the input InfoTable based on FailureMode field using EQ condition.
                                         * Inputs       : 
                                         *    - InputInfotable (INFOTABLE): Input data containing FailureMode field
                                         *    - Input (STRING): Value to filter FailureMode
                                         * Output       : result (INFOTABLE - filtered subset of InputInfotable)
                                         * Developer    : Raj Kumar
                                         * Date         : 23-Apr-2025
                                         */
                                        
                                        try {
                                        	// Initialize filters array
                                        	let filters = [];
                                        
                                        	// Dynamically build filters based on non-null inputs
                                        	if (PartsFailureName !== undefined && PartsFailureName !== null && PartsFailureName !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "PartsFailureName",
                                        			value: PartsFailureName
                                        		});
                                        	}
                                        	if (ProductName !== undefined && ProductName !== null && ProductName !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "ProductName",
                                        			value: ProductName
                                        		});
                                        	}
                                        	if (Description !== undefined && Description !== null && Description !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "Description",
                                        			value: Description
                                        		});
                                        	}
                                        	if (State !== undefined && State !== null && State !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "State",
                                        			value: State
                                        		});
                                        	}
                                        	if (FailureMode !== undefined && FailureMode !== null && FailureMode !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "FailureMode",
                                        			value: FailureMode
                                        		});
                                        	}
                                        	if (City !== undefined && City !== null && City !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "City",
                                        			value: City
                                        		});
                                        	}
                                        	if (ProductCategory !== undefined && ProductCategory !== null && ProductCategory !== "") {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "ProductCategory",
                                        			value: ProductCategory
                                        		});
                                        	}
                                        	if (SeriesInfotable !== undefined && SeriesInfotable !== null && SeriesInfotable.rows.length > 0) {
                                        		filters.push({
                                        			type: "EQ",
                                        			fieldName: "FailureMode",
                                        			value: SeriesInfotable[0].valueLabel
                                        		});
                                        	}
                                        
                                        	// Build and execute query only if filters exist
                                        	if (filters.length > 0) {
                                        		result = Resources["InfoTableFunctions"].Query({
                                        			t: InputInfotable,
                                        			query: {
                                        				filters: {
                                        					type: "AND",
                                        					filters: filters
                                        				}
                                        			}
                                        		});
                                        	} else {
                                        		// If no filters provided, return entire InputInfotable
                                        		result = InputInfotable;
                                        	}
                                        
                                        } catch (err) {
                                        	logger.error("Error in filterFailureModeFromData: " + err.message);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getFailureModeGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        // Create InfoTable for pie chart (ARN.Graph.DS should have fields: Name (STRING), Count (NUMBER))
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        // Initialize failure mode counters
                                        let failureModeCounts = {};
                                        
                                        data.rows.toArray().forEach(row => {
                                        	let mode;
                                        
                                        	try {
                                        		// Attempt to parse FailureMode assuming it might be JSON
                                        		let JSONData = JSON.parse(row.FailureMode);
                                        		if (typeof JSONData === "object" && JSONData !== null) {
                                        			mode = JSONData.Value || JSONData.Display || "Unknown";
                                        		} else {
                                        			mode = JSONData || "Unknown";
                                        		}
                                        	} catch (err) {
                                        		// If parsing fails, treat it as plain string
                                        		mode = row.FailureMode || "Unknown";
                                        	}
                                        
                                        	// Trim and normalize the mode string
                                        	mode = String(mode).trim();
                                        
                                        	// Count occurrences
                                        	if (failureModeCounts[mode]) {
                                        		failureModeCounts[mode]++;
                                        	} else {
                                        		failureModeCounts[mode] = 1;
                                        	}
                                        });
                                        
                                        // Populate the InfoTable
                                        Object.keys(failureModeCounts).forEach(mode => {
                                        	pieGraph.AddRow({
                                        		Name: mode,
                                        		Count: failureModeCounts[mode]
                                        	});
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getFilters_ProductsCategories_Names">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // Create empty InfoTables for each field
                                        let PartFailureName = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let ProductName = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let Description = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let FailureDate = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let State = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let FailureMode = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let City = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        let ProductCategory = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        
                                        // Create final InfoTable
                                        let finalInfotable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.GridFiltersData.DS"
                                        });
                                        
                                        // Get all data
                                        let data = InputInfotable;
                                        //let data = Things["ARN.PartsFailure.DT"].GetDataTableEntries({
                                        //	maxItems: undefined
                                        //});
                                        
                                        // Create Distinct Infotables
                                        let PartFailureNameInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "PartsFailureName"
                                        });
                                        let ProductNameInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "ProductName"
                                        });
                                        let DescriptionInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "Description"
                                        });
                                        let FailureDateInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "FailureDate"
                                        });
                                        let StateInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "State"
                                        });
                                        let FailureModeInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "FailureMode"
                                        });
                                        let CityInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "City"
                                        });
                                        let ProductCategoryInfotable = Resources["InfoTableFunctions"].Distinct({
                                        	t: data,
                                        	columns: "ProductCategory"
                                        });
                                        
                                        // Add distinct values to their respective InfoTables
                                        PartFailureNameInfotable.rows.toArray().forEach(row => {
                                        	if (row.PartsFailureName !== undefined && row.PartsFailureName !== null) {
                                        		PartFailureName.AddRow({ Name: row.PartsFailureName, Value: row.PartsFailureName });
                                        	}
                                        });
                                        
                                        ProductNameInfotable.rows.toArray().forEach(row => {
                                        	if (row.ProductName !== undefined && row.ProductName !== null) {
                                        		ProductName.AddRow({ Name: row.ProductName, Value: row.ProductName });
                                        	}
                                        });
                                        
                                        DescriptionInfotable.rows.toArray().forEach(row => {
                                        	if (row.Description !== undefined && row.Description !== null) {
                                        		Description.AddRow({ Name: row.Description, Value: row.Description });
                                        	}
                                        });
                                        
                                        FailureDateInfotable.rows.toArray().forEach(row => {
                                        	if (row.FailureDate !== undefined && row.FailureDate !== null) {
                                        		FailureDate.AddRow({ Name: row.FailureDate, Value: row.FailureDate });
                                        	}
                                        });
                                        
                                        StateInfotable.rows.toArray().forEach(row => {
                                        	if (row.State !== undefined && row.State !== null) {
                                        		State.AddRow({ Name: row.State, Value: row.State });
                                        	}
                                        });
                                        
                                        FailureModeInfotable.rows.toArray().forEach(row => {
                                        	if (row.FailureMode !== undefined && row.FailureMode !== null) {
                                        		FailureMode.AddRow({ Name: row.FailureMode, Value: row.FailureMode });
                                        	}
                                        });
                                        
                                        CityInfotable.rows.toArray().forEach(row => {
                                        	if (row.City !== undefined && row.City !== null) {
                                        		City.AddRow({ Name: row.City, Value: row.City });
                                        	}
                                        });
                                        
                                        ProductCategoryInfotable.rows.toArray().forEach(row => {
                                        	if (row.ProductCategory !== undefined && row.ProductCategory !== null) {
                                        		ProductCategory.AddRow({ Name: row.ProductCategory, Value: row.ProductCategory });
                                        	}
                                        });
                                        
                                        // Finally Add all to finalInfotable
                                        finalInfotable.AddRow({
                                        	PartFailureName: PartFailureName,
                                        	ProductName: ProductName,
                                        	Description: Description,
                                        	FailureDate: FailureDate,
                                        	State: State,
                                        	FailureMode: FailureMode,
                                        	City: City,
                                        	ProductCategory: ProductCategory
                                        });
                                        
                                        // Set result
                                        result = finalInfotable;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getFToTGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        // Create InfoTable for result (ARN.Graph.DS must have fields: Name (STRING), Count (NUMBER))
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        // Map to store year-month count
                                        let groupCounts = {};
                                        
                                        // Iterate over each row to group by year and month
                                        data.rows.toArray().forEach(row => {
                                        	if (row.FailureDate) {
                                        		let date = new Date(row.FailureDate);
                                        		let yearMonth = date.getFullYear() + "-" + String(date.getMonth() + 1).padStart(2, '0');
                                        
                                        		if (!groupCounts[yearMonth]) {
                                        			groupCounts[yearMonth] = 0;
                                        		}
                                        		groupCounts[yearMonth]++;
                                        	}
                                        });
                                        
                                        // Add to pieGraph
                                        for (let key in groupCounts) {
                                        	pieGraph.AddRow({
                                        		Name: key,
                                        		Count: groupCounts[key]
                                        	});
                                        }
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        ///* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "FailureID" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	// Ensure FailureID is valid before proceeding
                                        	if (row.FailureID !== "" && row.FailureID !== null && row.FailureID !== undefined) {
                                        		let dataRows = Resources["InfoTableFunctions"].Query({
                                        			t: data, // INFOTABLE
                                        			query: {
                                        				filters: {
                                        					type: "EQ",
                                        					fieldName: "FailureID",
                                        					value: row.FailureID
                                        				}
                                        			}
                                        		});
                                        
                                        		pieGraph.AddRow({
                                        			Name: row.FailureID, // STRING
                                        			Count: dataRows.getRowCount() // NUMBER
                                        		});
                                        	}
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getIssueGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "Symptom" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	if (row.Symptom !== "" && row.Symptom !== null && row.Symptom !== undefined) {
                                        		let dataRows = Resources["InfoTableFunctions"].Query({
                                        			t: data /* INFOTABLE */ ,
                                        			query: {
                                        				"filters": {
                                        					"type": "EQ",
                                        					"fieldName": "Symptom",
                                        					"value": row.Symptom
                                        				}
                                        			} /* QUERY */
                                        		});
                                        
                                        		pieGraph.AddRow({
                                        			Name: row.Symptom, // STRING
                                        			Count: dataRows.getRowCount() // NUMBER
                                        		});
                                        	}
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getPartsFailureByCount">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        	values: undefined /* INFOTABLE */ ,
                                        	maxItems: undefined /* NUMBER {"defaultValue":500} */ ,
                                        	tags: undefined /* TAGS */ ,
                                        	source: undefined /* STRING */ ,
                                        	query: undefined /* QUERY */
                                        });
                                        
                                        let query = {
                                        	"filters": {
                                        		"type": "And",
                                        		"filters": [{
                                        			"fieldName": "Warranty",
                                        			"type": "EQ",
                                        			"value": "Warranty"
                                        		}]
                                        	}
                                        };
                                        
                                        let warrantyCount = Resources["InfoTableFunctions"].Query({
                                        	t: data /* INFOTABLE */ ,
                                        	query: query /* QUERY */
                                        });
                                        
                                        result = warrantyCount.getRowCount();
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getPartsFailureData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /**
                                         * Service Name : getFilteredPartFailureDocs
                                         * Description  : Retrieves documents of type 'Part Failure Data' and filters them by FolderLocation
                                         * Output       : result (JSON - filtered document list)
                                         * Developer    : Raj Kumar
                                         * Date         : 10-Apr-2025
                                         */
                                        
                                        try {
                                            // Step 1: Define OData filter for document type
                                            let filter = "DocTypeName eq 'Part Failure Data'";
                                        
                                            // Step 2: Call document retrieval service
                                            let response = Things["Livpure Services"].GetDocuments({
                                                $filter: filter
                                            });
                                        
                                            // Step 3: Filter response based on folder location
                                            if (response && response.value && Array.isArray(response.value)) {
                                                let filteredDocs = response.value.filter(doc =>
                                                    doc.FolderLocation &&
                                                    doc.FolderLocation.includes("/Centralise DataBase/Centralized Data/Part Failure Data/")
                                                );
                                        
                                                // Step 4: Return structured success response
                                                result = {
                                                    status: "SUCCESS",
                                                    message: "Documents retrieved successfully.",
                                                    value: filteredDocs
                                                };
                                        
                                                // Optional: Store in Thing property if needed
                                                me.responseData = filteredDocs;
                                        
                                            } else {
                                                // Handle invalid or empty structure
                                                logger.warn("GetDocuments returned empty or invalid structure.");
                                        
                                                result = {
                                                    status: "WARNING",
                                                    message: "No documents found or invalid response format.",
                                                    value: []
                                                };
                                        
                                                me.responseData = [];
                                            }
                                        
                                        } catch (err) {
                                            logger.error("Error in getFilteredPartFailureDocs: " + err.message);
                                        
                                            // Return structured error response
                                            result = {
                                                status: "ERROR",
                                                message: "Failed to retrieve Part Failure documents. Reason: " + err.message,
                                                value: []
                                            };
                                        
                                            me.responseData = [];
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductCategories">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "ProductCategory" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        
                                        	let dataRows = Resources["InfoTableFunctions"].Query({
                                        		t: data /* INFOTABLE */ ,
                                        		query: {
                                        			"filters": {
                                        				"type": "EQ",
                                        				"fieldName": "ProductCategory",
                                        				"value": row.ProductCategory
                                        			}
                                        		} /* QUERY */
                                        	});
                                        
                                        	pieGraph.AddRow({
                                        		Name: row.ProductCategory, // STRING
                                        		Count: dataRows.getRowCount() // NUMBER
                                        	});
                                        
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductCategory_GridData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /**
                                         * Service Name : filterFailureModeFromData
                                         * Description  : Filters the input InfoTable based on multiple optional fields.
                                         * Inputs       : 
                                         *    - InputInfotable (INFOTABLE): Input data to filter
                                         *    - PartsFailureName (STRING): Optional filter
                                         *    - ProductName (STRING): Optional filter
                                         *    - Description (STRING): Optional filter
                                         *    - State (STRING): Optional filter
                                         *    - FailureMode (STRING): Optional filter
                                         *    - City (STRING): Optional filter
                                         *    - ProductCategory (STRING): Optional filter
                                         *    - SeriesInfotable (INFOTABLE): Optional filter (first row, ProductCategory)
                                         *    - SeriesInfotable2 (INFOTABLE): Optional filter (first row, ProductName)
                                         * Output       : result (INFOTABLE - filtered subset of InputInfotable)
                                         * Developer    : Raj Kumar
                                         * Date         : 23-Apr-2025
                                         */
                                        
                                        try {
                                            // Initialize filters array
                                            let filters = [];
                                        
                                            // Dynamically build filters based on non-null inputs
                                            if (PartsFailureName !== undefined && PartsFailureName !== null && PartsFailureName !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "PartsFailureName",
                                                    value: PartsFailureName
                                                });
                                            }
                                            if (ProductName !== undefined && ProductName !== null && ProductName !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductName",
                                                    value: ProductName
                                                });
                                            }
                                            if (Description !== undefined && Description !== null && Description !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "Description",
                                                    value: Description
                                                });
                                            }
                                            if (State !== undefined && State !== null && State !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "State",
                                                    value: State
                                                });
                                            }
                                            if (FailureMode !== undefined && FailureMode !== null && FailureMode !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "FailureMode",
                                                    value: FailureMode
                                                });
                                            }
                                            if (City !== undefined && City !== null && City !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "City",
                                                    value: City
                                                });
                                            }
                                            if (ProductCategory !== undefined && ProductCategory !== null && ProductCategory !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductCategory",
                                                    value: ProductCategory
                                                });
                                            }
                                            if (SeriesInfotable !== undefined && SeriesInfotable !== null && SeriesInfotable.rows.length > 0) {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductCategory",
                                                    value: SeriesInfotable[0].valueLabel
                                                });
                                            }
                                            if (SeriesInfotable2 !== undefined && SeriesInfotable2 !== null && SeriesInfotable2.rows.length > 0) {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductName",
                                                    value: SeriesInfotable2[0].valueLabel
                                                });
                                            }
                                            // Build and execute query only if filters exist
                                            if (filters.length > 0) {
                                                result = Resources["InfoTableFunctions"].Query({
                                                    t: InputInfotable,
                                                    query: {
                                                        filters: {
                                                            type: "AND",
                                                            filters: filters
                                                        }
                                                    }
                                                });
                                            } else {
                                                // If no filters provided, return entire InputInfotable
                                                result = InputInfotable;
                                            }
                                        
                                        } catch (err) {
                                            logger.error("Error in filterFailureModeFromData: " + err.message);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /**
                                         * Service Name : getProductGraphData
                                         * Description  : Generates pie chart data by counting ProductName occurrences in a filtered set.
                                         * Output       : result (INFOTABLE - ARN.Graph.DS)
                                         * Developer    : Raj Kumar
                                         * Date         : 23-Apr-2025
                                         */
                                        
                                        try {
                                        	// Step 1: Get all data from DataTable
                                        	let data = Things["ARN.PartsFailure.DT"].GetDataTableEntries();
                                        
                                        	// Step 2: Get unique ProductName values
                                        	let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        		t: data,
                                        		columns: "ProductName"
                                        	});
                                        
                                        	// Step 3: Create the result InfoTable
                                        	let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        		infoTableName: "InfoTable",
                                        		dataShapeName: "ARN.Graph.DS"
                                        	});
                                        
                                        	// Step 4: Loop through each unique ProductName and filter data accordingly
                                        	uniqueIDs.rows.toArray().forEach(row => {
                                        		if (row.ProductName !== "" && row.ProductName !== null && row.ProductName !== undefined) {
                                        
                                        			let query = {
                                        				filters: {
                                        					type: "AND",
                                        					filters: [{
                                        							type: "EQ",
                                        							fieldName: "ProductCategory",
                                        							value: SeriesInfotable[0].valueLabel
                                        						},
                                        						{
                                        							type: "EQ",
                                        							fieldName: "ProductName",
                                        							value: row.ProductName
                                        						}
                                        					]
                                        				}
                                        			};
                                        
                                        			let dataRows = Resources["InfoTableFunctions"].Query({
                                        				t: data,
                                        				query: query
                                        			});
                                        
                                        			// Step 5: Add row to pieGraph result
                                        			if (dataRows.getRowCount() > 0) {
                                        				pieGraph.AddRow({
                                        					Name: row.ProductName,
                                        					Count: dataRows.getRowCount()
                                        				});
                                        			}
                                        		}
                                        	});
                                        
                                        	// Step 6: Return final result
                                        	result = pieGraph;
                                        
                                        } catch (err) {
                                        	logger.error("Error in getProductGraphData: " + err.message);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductRegion_GridData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /**
                                         * Service Name : filterFailureModeFromData
                                         * Description  : Filters the input InfoTable based on multiple optional fields.
                                         * Inputs       : 
                                         *    - InputInfotable (INFOTABLE): Input data to filter
                                         *    - PartsFailureName (STRING): Optional filter
                                         *    - ProductName (STRING): Optional filter
                                         *    - Description (STRING): Optional filter
                                         *    - State (STRING): Optional filter
                                         *    - FailureMode (STRING): Optional filter
                                         *    - City (STRING): Optional filter
                                         *    - ProductCategory (STRING): Optional filter
                                         * Output       : result (INFOTABLE - filtered subset of InputInfotable)
                                         * Developer    : Raj Kumar
                                         * Date         : 23-Apr-2025
                                         */
                                        
                                        try {
                                            // Initialize filters array
                                            let filters = [];
                                        
                                            // Dynamically build filters based on non-null inputs
                                            if (PartsFailureName !== undefined && PartsFailureName !== null && PartsFailureName !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "PartsFailureName",
                                                    value: PartsFailureName
                                                });
                                            }
                                            if (ProductName !== undefined && ProductName !== null && ProductName !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductName",
                                                    value: ProductName
                                                });
                                            }
                                            if (Description !== undefined && Description !== null && Description !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "Description",
                                                    value: Description
                                                });
                                            }
                                            if (State !== undefined && State !== null && State !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "State",
                                                    value: State
                                                });
                                            }
                                            if (FailureMode !== undefined && FailureMode !== null && FailureMode !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "FailureMode",
                                                    value: FailureMode
                                                });
                                            }
                                            if (City !== undefined && City !== null && City !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "City",
                                                    value: City
                                                });
                                            }
                                            if (ProductCategory !== undefined && ProductCategory !== null && ProductCategory !== "") {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductCategory",
                                                    value: ProductCategory
                                                });
                                            }
                                            if (SeriesInfotable !== undefined && SeriesInfotable !== null && SeriesInfotable.rows.length > 0) {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "ProductCategory",
                                                    value: SeriesInfotable[0].valueLabel
                                                });
                                            }
                                            if (SeriesInfotable2 !== undefined && SeriesInfotable2 !== null && SeriesInfotable2.rows.length > 0) {
                                                filters.push({
                                                    type: "EQ",
                                                    fieldName: "City",
                                                    value: SeriesInfotable2[0].valueLabel
                                                });
                                            }
                                            // Build and execute query only if filters exist
                                            if (filters.length > 0) {
                                                result = Resources["InfoTableFunctions"].Query({
                                                    t: InputInfotable,
                                                    query: {
                                                        filters: {
                                                            type: "AND",
                                                            filters: filters
                                                        }
                                                    }
                                                });
                                            } else {
                                                // If no filters provided, return entire InputInfotable
                                                result = InputInfotable;
                                            }
                                        
                                        } catch (err) {
                                            logger.error("Error in filterFailureModeFromData: " + err.message);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductsList">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        	values: undefined /* INFOTABLE */ ,
                                        	maxItems: undefined /* NUMBER {"defaultValue":500} */ ,
                                        	tags: undefined /* TAGS */ ,
                                        	source: undefined /* STRING */ ,
                                        	query: undefined /* QUERY */
                                        });
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "ProductName" /* STRING */
                                        });
                                        
                                        let productList = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	productList.AddRow({
                                        		Name: row.ProductName, // STRING
                                        		Value: row.ProductName // STRING
                                        	});
                                        
                                        });
                                        
                                        result = productList;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSelectedData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /* -------------------- JSON Response --------------------- */
                                        let data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        	values: undefined /* INFOTABLE */,
                                        	maxItems: undefined /* NUMBER {"defaultValue":500} */,
                                        	tags: undefined /* TAGS */,
                                        	source: undefined /* STRING */,
                                        	query: undefined /* QUERY */
                                        });
                                        
                                        /* -------------------- Processing JSON to InfoTable ------------------------- */
                                        let partsFailureReport = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.PartsFailure.DS"
                                        });
                                        
                                        let dataRows = Resources["InfoTableFunctions"].Query({
                                        	t: data /* INFOTABLE */ ,
                                        	query: {
                                        		"filters": {
                                        			"type": "EQ",
                                        			"fieldName": "PartsFailureName",
                                        			"value": InputInfoTable[0].PartsFailureName
                                        		}
                                        	}
                                        });
                                        
                                        
                                        result = dataRows;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getStateGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "State" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        
                                        	let dataRows = Resources["InfoTableFunctions"].Query({
                                        		t: data /* INFOTABLE */ ,
                                        		query: {
                                        			"filters": {
                                        				"type": "EQ",
                                        				"fieldName": "State",
                                        				"value": row.State
                                        			}
                                        		} /* QUERY */
                                        	});
                                        
                                        	pieGraph.AddRow({
                                        		Name: row.State, // STRING
                                        		Count: dataRows.getRowCount() // NUMBER
                                        	});
                                        
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getStatesList">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        	values: undefined /* INFOTABLE */ ,
                                        	maxItems: undefined /* NUMBER {"defaultValue":500} */ ,
                                        	tags: undefined /* TAGS */ ,
                                        	source: undefined /* STRING */ ,
                                        	query: undefined /* QUERY */
                                        });
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "State" /* STRING */
                                        });
                                        
                                        let stateList = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.NameValue.DS"
                                        });
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	stateList.AddRow({
                                        		Name: row.State, // STRING
                                        		Value: row.State // STRING
                                        	});
                                        
                                        });
                                        
                                        result = stateList;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getTotalFailure">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        let productCount = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "ProductName" /* STRING */
                                        }).getRowCount();
                                        
                                        let cityCount = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "City" /* STRING */
                                        }).getRowCount();
                                        
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "State" /* STRING */
                                        });
                                        
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        
                                        	let dataRows = Resources["InfoTableFunctions"].Query({
                                        		t: data /* INFOTABLE */ ,
                                        		query: {
                                        			"filters": {
                                        				"type": "EQ",
                                        				"fieldName": "State",
                                        				"value": row.State
                                        			}
                                        		} /* QUERY */
                                        	});
                                        
                                        	pieGraph.AddRow({
                                        		Name: row.State, // STRING
                                        		Count: dataRows.getRowCount() // NUMBER
                                        	});
                                        
                                        });
                                        
                                        let stateData = [];
                                        pieGraph.rows.toArray().forEach(row => {
                                        	let entry = {};
                                        	entry[row.Name] = row.Count;
                                        	stateData.push(entry);
                                        });
                                        let totalCount = data.getRowCount() || 0;
                                        let openItem = stateData.find(item => item.hasOwnProperty("OPEN"));
                                        let openCount = openItem ? openItem.OPEN : 0;
                                        
                                        let lockedItem = stateData.find(item => item.hasOwnProperty("LOCKED"));
                                        let lockedCount = lockedItem ? lockedItem.LOCKED : 0;
                                        
                                        let inWorkItem = stateData.find(item => item.hasOwnProperty("INWORK"));
                                        let inWorkCount = inWorkItem ? inWorkItem.INWORK : 0;
                                        
                                        let approvedItem = stateData.find(item => item.hasOwnProperty("APPROVED"));
                                        let approvedCount = approvedItem ? approvedItem.APPROVED : 0;
                                        
                                        let scoreCard = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.PartsFailureScore.DS"
                                        });
                                        
                                        scoreCard.AddRow({
                                        	Open: openCount, // NUMBER
                                        	Closed: lockedCount, // NUMBER
                                        	InWork: inWorkCount, // NUMBER
                                        	Approval: approvedCount, // NUMBER
                                        	Place: cityCount, // NUMBER
                                        	Product: productCount, // NUMBER
                                        	Total: totalCount // NUMBER
                                        });
                                        
                                        result = scoreCard;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getWarrantyGraphData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data = InputInfotable;
                                        
                                        /* ------------------- Unique ID ------------------------- */
                                        let uniqueIDs = Resources["InfoTableFunctions"].Distinct({
                                        	t: data /* INFOTABLE */ ,
                                        	columns: "Warranty" /* STRING */
                                        });
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ARN.Graph.DS)
                                        let pieGraph = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ARN.Graph.DS"
                                        });
                                        
                                        uniqueIDs.rows.toArray().forEach(row => {
                                        	let warranty = row.Warranty || "";
                                        	let dataRows = Resources["InfoTableFunctions"].Query({
                                        		t: data, // INFOTABLE
                                        		query: {
                                        			filters: {
                                        				type: "EQ",
                                        				fieldName: "Warranty",
                                        				value: warranty
                                        			}
                                        		}
                                        	});
                                        
                                        	pieGraph.AddRow({
                                        		Name: warranty != "" ? warranty: "Non-Warranty", // STRING
                                        		Count: dataRows.getRowCount() // NUMBER
                                        	});
                                        });
                                        
                                        result = pieGraph;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="processResponse">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /**
                                         * Service Name : processPartsFailureData
                                         * Description  : Processes JSON data of Part Failures into InfoTable and stores it in a DataTable.
                                         * Output       : result (INFOTABLE - ARN.PartsFailure.DS)
                                         * Developer    : Raj Kumar
                                         * Date         : 23-Apr-2025
                                         */
                                        
                                        try {
                                            /* -------------------- JSON Response --------------------- */
                                            let data = me.getPartsFailureData();
                                        
                                            /* -------------------- Processing JSON to InfoTable ------------------------- */
                                            let partsFailureReport = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                                infoTableName: "InfoTable",
                                                dataShapeName: "ARN.PartsFailure.DS"
                                            });
                                        
                                            // Null/Array check
                                            if (data && data.value && Array.isArray(data.value)) {
                                                data.value.forEach(row => {
                                                    partsFailureReport.AddRow({
                                                        DocumentNumber: row.Number || "",                             // STRING
                                                        FailureID: row.ComLivpureFailureID || "",                    // STRING
                                                        Description: row.ComLivpureFailureDescription || "",         // STRING
                                                        ProductName: row.ComLivpureProductName || "",                // STRING
                                                        ProductID: row.ExtLivPureProductID || "",                    // STRING
                                                        FailureDate: row.ExtLivPureFailureDate || null,             // DATETIME
                                                        FailureMode: (row.ComLivpureFailureMode && row.ComLivpureFailureMode.Display) || "", // STRING
                                                        FailureEnvironment: row.ComLivpureFailureEnvironment || "",  // STRING
                                                        Symptom: row.ComLivpureSymptom || "",                        // STRING
                                                        Warranty: (row.ComLivpureWarranty && row.ComLivpureWarranty.Display) || "", // STRING
                                                        City: row.ComLivpureCity || "",                              // STRING
                                                        State: (row.State && row.State.Value) || "",                 // STRING
                                                        CreatedBy: row.CreatedBy || "",                              // STRING
                                                        PartsFailureName: row.Name || "",                            // STRING
                                                        ProductCategory: (row.Productcategory && row.Productcategory.Display) || "" // STRING
                                                    });
                                                });
                                        
                                                // Save processed data to a DataTable
                                                Things["ARN.PartsFailure.DT"].AddDataTableEntries({
                                                    tags: undefined,
                                                    location: undefined,
                                                    source: undefined,
                                                    sourceType: undefined,
                                                    values: partsFailureReport
                                                });
                                        
                                                result = partsFailureReport;
                                        
                                            } else {
                                                logger.warn("No data received from getPartsFailureData or invalid format.");
                                            }
                                        
                                        } catch (err) {
                                            logger.error("Error in processPartsFailureData: " + err.message);
                                        
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="queryPartsFailure">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let data;
                                        
                                        let filters = [];
                                        
                                        
                                        if (FromDate && ToDate) {
                                        	filters.push({
                                        		"fieldName": "FailureDate",
                                        		"type": "BETWEEN",
                                        		"from": FromDate,
                                        		"to": ToDate
                                        	});
                                        }
                                        
                                        if (ProductName) {
                                        	filters.push({
                                        		"fieldName": "ProductName",
                                        		"type": "EQ",
                                        		"value": ProductName
                                        	});
                                        }
                                        if (City) {
                                        	filters.push({
                                        		"fieldName": "City",
                                        		"type": "EQ",
                                        		"value": City
                                        	});
                                        }
                                        if (State) {
                                        	filters.push({
                                        		"fieldName": "State",
                                        		"type": "EQ",
                                        		"value": State
                                        	});
                                        }
                                        var query = {
                                        	"filters": {
                                        		"type": "And",
                                        		"filters": filters
                                        	}
                                        };
                                        if (filters.length > 0) {
                                        
                                        	data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        		values: undefined /* INFOTABLE */ ,
                                        		maxItems: undefined /* NUMBER {"defaultValue":500} */ ,
                                        		tags: undefined /* TAGS */ ,
                                        		source: undefined /* STRING */ ,
                                        		query: query /* QUERY */
                                        	});
                                        
                                        } else {
                                        
                                        	data = Things["ARN.PartsFailure.DT"].QueryDataTableEntries({
                                        		values: undefined /* INFOTABLE */ ,
                                        		maxItems: undefined /* NUMBER {"defaultValue":500} */ ,
                                        		tags: undefined /* TAGS */ ,
                                        		source: undefined /* STRING */ ,
                                        		query: undefined /* QUERY */
                                        	});
                                        
                                        }
                                        for (let i = 0; i < data.getRowCount(); i++) {
                                            let row = data.getRow(i);
                                            
                                            data[i].Warranty = (row.Warranty === "Warranty")        ? '<img src="https://cdn-icons-png.flaticon.com/512/9413/9413653.png" alt="Warranty" width=20>'
                                                : '<img src="https://cdn-icons-png.flaticon.com/512/4400/4400944.png" alt="No Warranty" width=20>';
                                        }
                                        
                                        result = data;
                                        result.RemoveField("key");
                                        result.RemoveField("location");
                                        result.RemoveField("sourceType");
                                        result.RemoveField("source");
                                        result.RemoveField("tags");
                                        result.RemoveField("timestamp");
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="testService">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        //result = InputInfotable[0].valueLabel;
                                        
                                        result = InputInfotable;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="responseData"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <responseData>
                    <Value>
                        <json>
                        <![CDATA[
                        {"array":[{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:2422159","ComLivpureSymptom":"Exhaust gasket failed to maintain proper sealing under high suction conditions, causing smoke leakage.","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"XZ-200 Chimney","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"livadmin","FolderName":"Chimney","Name":"Gasket Seal Failure","LastModified":"2025-01-03T18:01:30+01:00","ObjectType":"Part Failure Data","ComLivpureFailureEnvironment":"High temperature and humidity in coastal regions.","ComArorianWindchillLivpureCreatorRemark":"Replacement parts are being sent to affected customers. Manufacturing process under review.","Number":"PF-0000010025","Version":"A.1","CheckOutStatus":"","ComArorianWindchillLivpureProjectName":"Chimney Product Improvement Initiative","ComLivpureFailureMode":{"Value":"Material degradation in gasket under prolonged heat exposure.","Display":"Material degradation in gasket under prolonged heat exposure."},"Latest":true,"ID":"OR:wt.doc.WTDocument:2422160","CreatedOn":"2025-01-03T18:01:30+01:00","Identity":"Part Failure Data - PF-0000010025, Gasket Seal Failure, Livpure, A.1","CreatedBy":"livadmin","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"LOCKED","Display":"Locked"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-01-01T00:00:00+01:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"XZ200-BATCH#1243","ComLivpureCity":"Mumbai","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"250"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3555054","ComLivpureSymptom":"Water Leakage","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018930","LastModified":"2025-04-21T15:49:35+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018930","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3555055","CreatedOn":"2025-04-21T15:49:35+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018930, PFD-AC-MKT-0000018930, Livpure, A.1","ComLivpureFailureDescription":"Drain Pipe Chocked","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041009375995","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-10T06:08:53+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19K3SRW-EH20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3555012","ComLivpureSymptom":"Water Leakage","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC CENTRE D","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018916","LastModified":"2025-04-21T15:49:33+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018916","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3555013","CreatedOn":"2025-04-21T15:49:33+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018916, PFD-AC-MKT-0000018916, Livpure, A.1","ComLivpureFailureDescription":"Crack In Drain Tray","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041009083864","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-10T05:39:45+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19KN3SRWF-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3555033","ComLivpureSymptom":"Water Leakage","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC CENTRE D","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018923","LastModified":"2025-04-21T15:49:34+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018923","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3555034","CreatedOn":"2025-04-21T15:49:34+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018923, PFD-AC-MKT-0000018923, Livpure, A.1","ComLivpureFailureDescription":"Drain Pipe Chocked","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041009364572","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-10T06:07:41+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19KN3SRWF-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554991","ComLivpureSymptom":"HIGH ELECTRICTIY CONSUMPTION","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LPS-FS19K3SW-E20","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018909","LastModified":"2025-04-21T15:49:32+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018909","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554992","CreatedOn":"2025-04-21T15:49:32+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018909, PFD-AC-MKT-0000018909, Livpure, A.1","ComLivpureFailureDescription":"Odu Chocking","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041004321759","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-10T13:03:31+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19K3SW-E20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3555075","ComLivpureSymptom":"Taking long time to fill tank","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018934","LastModified":"2025-04-21T15:49:35+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018934","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3555076","CreatedOn":"2025-04-21T15:49:35+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018934, PFD-WP-MKT-0000018934, Livpure, A.1","ComLivpureFailureDescription":"PP Filter chocked","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041010011069","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-02T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3555096","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018941","LastModified":"2025-04-21T15:49:36+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018941","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG RO MEMBRANE WITH HOUSING","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3555097","CreatedOn":"2025-04-21T15:49:36+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018941, PFD-WP-MKT-0000018941, Livpure, A.1","ComLivpureFailureDescription":"ELBOW-RO MEMBRANE","ExtLivPurePartID":"16000604","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041010061379","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3576058","ComLivpureSymptom":"Water Taste Bad","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-ENVY-WAAS-I","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000019103","LastModified":"2025-04-23T07:11:58+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000019103","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3576059","CreatedOn":"2025-04-23T07:11:58+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000019103, PFD-WP-MKT-0000019103, Livpure, A.1","ComLivpureFailureDescription":"ROMembrane","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206104913","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-11T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-ENVY-WAAS-I","ComLivpureCity":"Delhi NCR","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3408074","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000017703","LastModified":"2025-04-04T09:22:43+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000017703","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"24 V DC input Power Jack for SMPS","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3408075","CreatedOn":"2025-04-04T09:22:43+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000017703, PFD-WP-MKT-0000017703, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000053","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3408095","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000017710","LastModified":"2025-04-04T09:22:45+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000017710","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"UF MEMBRANE MINI","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3408096","CreatedOn":"2025-04-04T09:22:45+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000017710, PFD-WP-MKT-0000017710, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000098","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"5"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3408116","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000017717","LastModified":"2025-04-04T09:22:46+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000017717","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"Solenoid Valve (K)","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3408117","CreatedOn":"2025-04-04T09:22:46+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000017717, PFD-WP-MKT-0000017717, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16110107","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554287","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018731","LastModified":"2025-04-21T15:39:52+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018731","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554288","CreatedOn":"2025-04-21T15:39:52+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018731, PFD-WP-MKT-0000018731, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 3/8 PUSHFIT","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042104575135","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554694","ComLivpureSymptom":"No Water","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018801","LastModified":"2025-04-21T15:49:17+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018801","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554695","CreatedOn":"2025-04-21T15:49:17+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018801, PFD-WP-MKT-0000018801, Livpure, A.1","ComLivpureFailureDescription":"PIPE BLOCK / CREACKED","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040205184017","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-02T13:48:17+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554715","ComLivpureSymptom":"Insects Ants","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018808","LastModified":"2025-04-21T15:49:18+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018808","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG ACTIVATED CARBON FILTER (COMPAC)-New","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554716","CreatedOn":"2025-04-21T15:49:18+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018808, PFD-WP-MKT-0000018808, Livpure, A.1","ComLivpureFailureDescription":"Tank Cleaning","ExtLivPurePartID":"16000730","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040205184017","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-02T13:48:17+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554736","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018815","LastModified":"2025-04-21T15:49:19+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018815","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554737","CreatedOn":"2025-04-21T15:49:19+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018815, PFD-WP-MKT-0000018815, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040209432834","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-07T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554754","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018822","LastModified":"2025-04-21T15:49:20+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018822","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554755","CreatedOn":"2025-04-21T15:49:20+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018822, PFD-WP-MKT-0000018822, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040209441475","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-07T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554775","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018829","LastModified":"2025-04-21T15:49:21+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018829","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554776","CreatedOn":"2025-04-21T15:49:21+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018829, PFD-WP-MKT-0000018829, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040602253563","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2024-01-13T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554793","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018836","LastModified":"2025-04-21T15:49:22+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018836","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554794","CreatedOn":"2025-04-21T15:49:22+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018836, PFD-WP-MKT-0000018836, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040602442804","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-12T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554811","ComLivpureSymptom":"Water Leakage","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC CENTRE D","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018846","LastModified":"2025-04-21T15:49:23+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018846","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554812","CreatedOn":"2025-04-21T15:49:23+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018846, PFD-AC-MKT-0000018846, Livpure, A.1","ComLivpureFailureDescription":"Drain Pipe Chocked","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040802274803","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-08T10:59:28+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19KN3SRWF-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554829","ComLivpureSymptom":"Chimney not working ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-DRIFT-60-FL-HAC-INCLINED","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018851","LastModified":"2025-04-21T15:49:23+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018851","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554830","CreatedOn":"2025-04-21T15:49:23+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018851, PFD-CM-MKT-0000018851, Livpure, A.1","ComLivpureFailureDescription":"Display Not working","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040803460140","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-08T12:16:57+02:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-DRIFT-60-FL-HAC","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554850","ComLivpureSymptom":"Water Leakage","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC CENTRE D","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018860","LastModified":"2025-04-21T15:49:24+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018860","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554851","CreatedOn":"2025-04-21T15:49:24+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018860, PFD-AC-MKT-0000018860, Livpure, A.1","ComLivpureFailureDescription":"Drain Pipe Chocked","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040904003471","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T12:32:08+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19KN3SRWF-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554871","ComLivpureSymptom":"H6 ERROR","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018867","LastModified":"2025-04-21T15:49:27+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018867","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"1971377 Fan Motor IDU 12K","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554872","CreatedOn":"2025-04-21T15:49:27+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018867, PFD-AC-MKT-0000018867, Livpure, A.1","ComLivpureFailureDescription":"IDU FAN MOTOR PROTECTION","ExtLivPurePartID":"16104587","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040905392488","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T14:10:08+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19K3SRW-EH20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554892","ComLivpureSymptom":"Not working-Dead","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LPS-FS19K3SW-E21","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018874","LastModified":"2025-04-21T15:49:28+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018874","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554893","CreatedOn":"2025-04-21T15:49:28+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018874, PFD-AC-MKT-0000018874, Livpure, A.1","ComLivpureFailureDescription":"Low Voltage","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040905482913","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T14:19:01+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19K3SW-E21","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554910","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018878","LastModified":"2025-04-21T15:49:28+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018878","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554911","CreatedOn":"2025-04-21T15:49:28+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018878, PFD-WP-MKT-0000018878, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040905545903","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-12T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554928","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018885","LastModified":"2025-04-21T15:49:29+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018885","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554929","CreatedOn":"2025-04-21T15:49:29+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018885, PFD-WP-MKT-0000018885, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 3/8 PUSHFIT","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040906123961","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-28T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554949","ComLivpureSymptom":"Chimney not working ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-DRIFT-60-FL-HAC-INCLINED","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018893","LastModified":"2025-04-21T15:49:30+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018893","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554950","CreatedOn":"2025-04-21T15:49:30+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018893, PFD-CM-MKT-0000018893, Livpure, A.1","ComLivpureFailureDescription":"Display Not working","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040911295262","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T08:00:44+02:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-DRIFT-60-FL-HAC","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554970","ComLivpureSymptom":"REMOTE ISSUE","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR S WAC AC","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018902","LastModified":"2025-04-21T15:49:31+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018902","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554971","CreatedOn":"2025-04-21T15:49:31+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018902, PFD-AC-MKT-0000018902, Livpure, A.1","ComLivpureFailureDescription":"Battery Defective","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25041003183807","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-10T11:56:10+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPW-FS19KN3SW-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552109","ComLivpureSymptom":"Noise Issue","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIVPURE-ETHER-90-FL-HAC-T SHAPE","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018678","LastModified":"2025-04-21T10:31:09+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018678","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"Chimney 3MOTION CONT. SW + MAIN PCB CARD","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552110","CreatedOn":"2025-04-21T10:31:09+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018678, PFD-CM-MKT-0000018678, Livpure, A.1","ComLivpureFailureDescription":"Blower Broken/Damaged","ExtLivPurePartID":"16111025","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111524714","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-18T01:00:00+01:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-ETHER-90-FL-HAC","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552067","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018663","LastModified":"2025-04-21T10:31:06+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018663","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"UF MEMBRANE MINI","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552068","CreatedOn":"2025-04-21T10:31:06+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018663, PFD-WP-MKT-0000018663, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","ExtLivPurePartID":"16000098","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111511775","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2024-01-13T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552088","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018670","LastModified":"2025-04-21T10:31:08+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018670","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"MOUNTING PLATE FOR TOUCH","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552089","CreatedOn":"2025-04-21T10:31:08+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018670, PFD-WP-MKT-0000018670, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","ExtLivPurePartID":"16000356","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111511775","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2024-01-13T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552130","ComLivpureSymptom":"BLOWER NOT WORKING","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIVPURE-ETHER-90-FL-HAC-T SHAPE","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018685","LastModified":"2025-04-21T10:31:10+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018685","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"ALUMINIUM FOIL DUCT PIPE","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552131","CreatedOn":"2025-04-21T10:31:10+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018685, PFD-CM-MKT-0000018685, Livpure, A.1","ComLivpureFailureDescription":"Blower broken","ExtLivPurePartID":"16111040","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111524714","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-18T01:00:00+01:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-ETHER-90-FL-HAC","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554505","ComLivpureSymptom":"WIFI ISSUE","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR Window AC","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018741","LastModified":"2025-04-21T15:39:53+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018741","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"Coil Sensor","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554506","CreatedOn":"2025-04-21T15:39:53+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018741, PFD-AC-MKT-0000018741, Livpure, A.1","ComLivpureFailureDescription":"Wifi Pcb Defective","ExtLivPurePartID":"16106386","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042105100563","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-21T13:41:48+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPW-FS19K3W-E22-1.5T","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554526","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018745","LastModified":"2025-04-21T15:39:54+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018745","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554527","CreatedOn":"2025-04-21T15:39:54+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018745, PFD-WP-MKT-0000018745, Livpure, A.1","ComLivpureFailureDescription":"ELBOW 1/4 ONE SIDE PUSH ONE SIDE THREAD","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042105294226","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554547","ComLivpureSymptom":"Dirty water coming from machine ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018752","LastModified":"2025-04-21T15:39:55+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018752","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554548","CreatedOn":"2025-04-21T15:39:55+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018752, PFD-WP-MKT-0000018752, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042105453065","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-09T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554568","ComLivpureSymptom":"Re-Installation Request","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-DRIFT-60-FL-HAC-INCLINED","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018760","LastModified":"2025-04-21T15:39:56+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018760","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554569","CreatedOn":"2025-04-21T15:39:56+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018760, PFD-CM-MKT-0000018760, Livpure, A.1","ComLivpureFailureDescription":"Re-Installation","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042105534004","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-21T14:24:46+02:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-DRIFT-60-FL-HAC","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554589","ComLivpureSymptom":"Re-Installation Request","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-DRIFT-60-FL-HAC-INCLINED","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018767","LastModified":"2025-04-21T15:39:57+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018767","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554590","CreatedOn":"2025-04-21T15:39:57+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018767, PFD-CM-MKT-0000018767, Livpure, A.1","ComLivpureFailureDescription":"Re-Installation","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042106000627","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-21T14:31:24+02:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-DRIFT-60-FL-HAC","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554610","ComLivpureSymptom":"Not working-Dead","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC CENTRE D","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018776","LastModified":"2025-04-21T15:39:58+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018776","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG Sediment Filter In/out One Side","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554611","CreatedOn":"2025-04-21T15:39:58+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018776, PFD-AC-MKT-0000018776, Livpure, A.1","ComLivpureFailureDescription":"Idu Power Supply Issue","ExtLivPurePartID":"16000081","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042106090637","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-21T14:39:57+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19KN3SRWF-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554631","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018780","LastModified":"2025-04-21T15:49:15+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018780","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG ACTIVATED CARBON FILTER (COMPAC)-New","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554632","CreatedOn":"2025-04-21T15:49:15+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018780, PFD-WP-MKT-0000018780, Livpure, A.1","ComLivpureFailureDescription":"Reflector Housing","ExtLivPurePartID":"16000730","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040102240564","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-07T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554652","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018787","LastModified":"2025-04-21T15:49:15+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018787","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"SFG RO MEMBRANE WITH HOUSING","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554653","CreatedOn":"2025-04-21T15:49:15+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018787, PFD-WP-MKT-0000018787, Livpure, A.1","ComLivpureFailureDescription":"ELBOW 1/4 ONE SIDE PUSH ONE SIDE THREAD","ExtLivPurePartID":"16000604","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040203321823","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-02T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3554673","ComLivpureSymptom":"Insects Ants","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018794","LastModified":"2025-04-21T15:49:16+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018794","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"ACMC Filter Kit (RO+UF)","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3554674","CreatedOn":"2025-04-21T15:49:16+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018794, PFD-WP-MKT-0000018794, Livpure, A.1","ComLivpureFailureDescription":"Tank Cleaning","ExtLivPurePartID":"16110494","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25040203570230","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-07T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566060","ComLivpureSymptom":"Water Taste Bad","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-ENVY-WAAS-I","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018983","LastModified":"2025-04-22T18:08:03+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018983","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566061","CreatedOn":"2025-04-22T18:08:03+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018983, PFD-WP-MKT-0000018983, Livpure, A.1","ComLivpureFailureDescription":"ROMembrane","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042202325301","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-11T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-ENVY-WAAS-I","ComLivpureCity":"Delhi NCR","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552367","ComLivpureSymptom":"Water Leakage","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV FS 1.5T 3 STAR SR SPLIT AC CENTRE D","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Air Conditioner","Name":"PFD-AC-MKT-0000018708","LastModified":"2025-04-21T11:27:49+02:00","ObjectType":"Part Failure Data","Number":"PFD-AC-MKT-0000018708","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552368","CreatedOn":"2025-04-21T11:27:49+02:00","Identity":"Part Failure Data - PFD-AC-MKT-0000018708, PFD-AC-MKT-0000018708, Livpure, A.1","ComLivpureFailureDescription":"Drain Pipe Chocked","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111564546","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-10T05:39:45+02:00","Productcategory":{"Value":"AirConditioner","Display":"Air Conditioner"},"ExtLivPureProductID":"LPS-FS19KN3SRWF-A20","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Air Conditioner"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552331","ComLivpureSymptom":"Machine not Working","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018691","LastModified":"2025-04-21T11:27:46+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018691","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552332","CreatedOn":"2025-04-21T11:27:46+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018691, PFD-WP-MKT-0000018691, Livpure, A.1","ComLivpureFailureDescription":"SOLENOID VALVE 24 V DC 1/4 PUSHFIT","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111520272","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-12T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3552349","ComLivpureSymptom":"BLOWER NOT WORKING","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"LIV-DRIFT-60-FL-HAC-INCLINED","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Chimney","Name":"PFD-CM-MKT-0000018699","LastModified":"2025-04-21T11:27:47+02:00","ObjectType":"Part Failure Data","Number":"PFD-CM-MKT-0000018699","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3552350","CreatedOn":"2025-04-21T11:27:47+02:00","Identity":"Part Failure Data - PFD-CM-MKT-0000018699, PFD-CM-MKT-0000018699, Livpure, A.1","ComLivpureFailureDescription":"Blower broken","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042111541739","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-27T10:31:47+01:00","Productcategory":{"Value":"Chimney","Display":"Chimney"},"ExtLivPureProductID":"LIV-DRIFT-60-FL-HAC","ComLivpureCity":"Ghaziabad","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Chimney"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315188","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016985","LastModified":"2025-03-19T07:57:20+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016985","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"24 V DC input Power Jack for SMPS","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315189","CreatedOn":"2025-03-19T07:57:20+01:00","Identity":"Part Failure Data - PF-0000016985, PF-0000016985, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000053","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315209","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016986","LastModified":"2025-03-19T07:57:20+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016986","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"UF MEMBRANE MINI","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315210","CreatedOn":"2025-03-19T07:57:20+01:00","Identity":"Part Failure Data - PF-0000016986, PF-0000016986, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000098","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"5"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315230","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016987","LastModified":"2025-03-19T07:57:22+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016987","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"Solenoid Valve (K)","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315231","CreatedOn":"2025-03-19T07:57:22+01:00","Identity":"Part Failure Data - PF-0000016987, PF-0000016987, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16110107","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566078","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000018990","LastModified":"2025-04-22T18:08:05+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000018990","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"ACMC Filter Kit (RO+UF)","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566079","CreatedOn":"2025-04-22T18:08:05+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000018990, PFD-WP-MKT-0000018990, Livpure, A.1","ComLivpureFailureDescription":"Reflector Housing","ExtLivPurePartID":"16110494","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042202483084","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-27T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Delhi NCR","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566099","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000018999","LastModified":"2025-04-22T18:08:07+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000018999","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566100","CreatedOn":"2025-04-22T18:08:07+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000018999, PFD-CT-MKT-0000018999, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042205115273","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T13:42:37+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566117","ComLivpureSymptom":"No Water","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PFD-WP-MKT-0000019004","LastModified":"2025-04-22T18:08:08+02:00","ObjectType":"Part Failure Data","Number":"PFD-WP-MKT-0000019004","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566118","CreatedOn":"2025-04-22T18:08:08+02:00","Identity":"Part Failure Data - PFD-WP-MKT-0000019004, PFD-WP-MKT-0000019004, Livpure, A.1","ComLivpureFailureDescription":"NR SOLENOID VALVE 24V DC PUSHFIT","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042205304261","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-02T13:48:17+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566135","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019013","LastModified":"2025-04-22T18:08:09+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019013","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566136","CreatedOn":"2025-04-22T18:08:09+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019013, PFD-CT-MKT-0000019013, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042205444670","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T13:42:37+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566153","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019020","LastModified":"2025-04-22T18:08:10+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019020","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566154","CreatedOn":"2025-04-22T18:08:10+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019020, PFD-CT-MKT-0000019020, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042205571740","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T14:28:43+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566171","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019027","LastModified":"2025-04-22T18:08:11+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019027","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566172","CreatedOn":"2025-04-22T18:08:11+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019027, PFD-CT-MKT-0000019027, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206051927","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T14:35:59+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566189","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019034","LastModified":"2025-04-22T18:08:12+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019034","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566190","CreatedOn":"2025-04-22T18:08:12+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019034, PFD-CT-MKT-0000019034, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206153918","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T14:28:43+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566207","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019041","LastModified":"2025-04-22T18:08:13+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019041","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566208","CreatedOn":"2025-04-22T18:08:13+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019041, PFD-CT-MKT-0000019041, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206210796","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T13:42:37+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566225","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019048","LastModified":"2025-04-22T18:08:14+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019048","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566226","CreatedOn":"2025-04-22T18:08:14+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019048, PFD-CT-MKT-0000019048, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206312233","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T15:02:30+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566243","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019055","LastModified":"2025-04-22T18:08:15+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019055","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566244","CreatedOn":"2025-04-22T18:08:15+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019055, PFD-CT-MKT-0000019055, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206402620","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T15:11:01+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566261","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019062","LastModified":"2025-04-22T18:08:16+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019062","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566262","CreatedOn":"2025-04-22T18:08:16+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019062, PFD-CT-MKT-0000019062, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206411323","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T15:11:47+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566279","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019069","LastModified":"2025-04-22T18:08:17+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019069","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566280","CreatedOn":"2025-04-22T18:08:17+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019069, PFD-CT-MKT-0000019069, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206415996","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T15:12:35+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3566297","ComLivpureSymptom":"No Ignition","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"Livpure-Eden-3 Burner-Auto Ignition","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Cooktop","Name":"PFD-CT-MKT-0000019076","LastModified":"2025-04-22T18:08:19+02:00","ObjectType":"Part Failure Data","Number":"PFD-CT-MKT-0000019076","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3566298","CreatedOn":"2025-04-22T18:08:19+02:00","Identity":"Part Failure Data - PFD-CT-MKT-0000019076, PFD-CT-MKT-0000019076, Livpure, A.1","ComLivpureFailureDescription":"Main Gas Valve Closed","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25042206424619","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-04-22T15:13:20+02:00","Productcategory":{"Value":"Cooktop","Display":"Cooktop"},"ExtLivPureProductID":"LIV-EDEN-3B-AI","ComLivpureCity":"Gurgaon","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Cooktop"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315167","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016984","LastModified":"2025-03-19T07:52:26+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016984","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"Solenoid Valve (K)","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315168","CreatedOn":"2025-03-19T07:52:26+01:00","Identity":"Part Failure Data - PF-0000016984, PF-0000016984, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16110107","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315300","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016988","LastModified":"2025-03-19T08:21:27+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016988","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"24 V DC input Power Jack for SMPS","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315301","CreatedOn":"2025-03-19T08:21:27+01:00","Identity":"Part Failure Data - PF-0000016988, PF-0000016988, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000053","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315321","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016989","LastModified":"2025-03-19T08:21:28+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016989","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"UF MEMBRANE MINI","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315322","CreatedOn":"2025-03-19T08:21:28+01:00","Identity":"Part Failure Data - PF-0000016989, PF-0000016989, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16000098","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"5"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315342","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"GLITZ-PLUS","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016990","LastModified":"2025-03-19T08:21:28+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016990","Version":"A.1","CheckOutStatus":"","ExtLivPurePartDescription":"Solenoid Valve (K)","ComLivpureFailureMode":{"Value":"spare_parts_failure","Display":"Spare Parts Failure"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315343","CreatedOn":"2025-03-19T08:21:28+01:00","Identity":"Part Failure Data - PF-0000016990, PF-0000016990, Livpure, A.1","ComLivpureFailureDescription":"SFG RO MEMBRANE WITH HOUSING","ExtLivPurePartID":"16110107","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25030701064568","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2023-10-06T02:00:00+02:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-GLITZ-PLUS","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier","ComLivpureQuantity":"1"},{"OrganizationName":"Livpure","VersionID":"VR:wt.doc.WTDocument:3315363","ComLivpureSymptom":"Leakage ","@odata.type":"#PTC.DocMgmt.Partfailuredata","ComLivpureProductName":"TOUCH+","DocTypeName":"Part Failure Data","CheckoutState":"Checked in","ModifiedBy":"sapuser","FolderName":"Water Purifier","Name":"PF-0000016991","LastModified":"2025-03-19T08:21:29+01:00","ObjectType":"Part Failure Data","Number":"PF-0000016991","Version":"A.1","CheckOutStatus":"","ComLivpureFailureMode":{"Value":"product_performance_issue","Display":"Product Performance Issue"},"Latest":true,"ID":"OR:wt.doc.WTDocument:3315364","CreatedOn":"2025-03-19T08:21:29+01:00","Identity":"Part Failure Data - PF-0000016991, PF-0000016991, Livpure, A.1","ComLivpureFailureDescription":"","CreatedBy":"sapuser","ComLivpureFailureID":"JS-25031712083668","WorkInProgressState":{"Value":"c/i","Display":"Checked in"},"CabinetName":"Default","ComLivpureWarranty":{"Value":"Warranty","Display":"Warranty"},"Revision":"A","LifeCycleTemplateName":"Livpure Part Failure Data Item","State":{"Value":"OPEN","Display":"Open"},"TypeIcon":{"Path":"https://windchill.arorian.com/Windchill/sslClientAuth/netmarkets/images/doc_document.gif","Tooltip":"Part Failure Data"},"ExtLivPureFailureDate":"2025-03-19T01:00:00+01:00","Productcategory":{"Value":"WaterPurifier","Display":"Water Purifier"},"ExtLivPureProductID":"LIV-TOUCH+","ComLivpureCity":"Kanpur Nagar","FolderLocation":"/Centralise DataBase/Centralized Data/Part Failure Data/Water Purifier"}]}
                        ]]>
                        </json>
                    </Value>
                    <Timestamp>2025-04-23T16:24:16.161Z</Timestamp>
                    <Quality>GOOD</Quality>
                </responseData>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
